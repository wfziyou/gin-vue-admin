#fixme  Clone openIM Server project before using docker-compose,project addressï¼šhttps://github.com/OpenIMSDK/Open-IM-Server.git
version: "3"
services:
  mysql:
    image: mysql:5.7
    ports:
      - 13306:3306
      - 23306:33060
    container_name: mysql
    volumes:
      - ${DATA_DIR}/components/mysql/data:/var/lib/mysql
      - /etc/localtime:/etc/localtime
    environment:
      MYSQL_ROOT_PASSWORD: ${PASSWORD}
    restart: always

  mongodb:
    image: mongo:4.0
    ports:
      - 37017:27017
    container_name: mongo
    command: --wiredTigerCacheSizeGB 1 --auth
    volumes:
      - ${DATA_DIR}/components/mongodb/data/db:/data/db
      - ${DATA_DIR}/components/mongodb/data/logs:/data/logs
      - ${DATA_DIR}/components/mongodb/data/conf:/etc/mongo
      - ./script/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro 
    environment:
      - TZ=Asia/Shanghai
      # cache
      - wiredTigerCacheSizeGB=1
      - MONGO_INITDB_ROOT_USERNAME=${USER}
      - MONGO_INITDB_ROOT_PASSWORD=${PASSWORD}
      - MONGO_INITDB_DATABASE=openIM
      - MONGO_USERNAME=${USER}
      - MONGO_PASSWORD=${PASSWORD}
    #
    restart: always

  redis:
    image: redis
    ports:
      - 16379:6379
    container_name: redis
    volumes:
      - ${DATA_DIR}/components/redis/data:/data
      #redis config file
      - ${DATA_DIR}/components/redis/config/redis.conf:/usr/local/redis/config/redis.conf
    environment:
      TZ: Asia/Shanghai
    restart: always
    sysctls:
      net.core.somaxconn: 1024
    command: redis-server --requirepass ${PASSWORD} --appendonly yes


  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
    container_name: zookeeper
    volumes:
      - /etc/localtime:/etc/localtime
    environment:
      TZ: Asia/Shanghai
    restart: always


  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    restart: always
    ports:
      - 9092:9092
    environment:
      TZ: Asia/Shanghai
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "ws2ms_chat:8:1,ms2ps_chat:8:1,msg_to_mongo:8:1"
      KAFKA_ADVERTISED_LISTENERS: INSIDE://127.0.0.1:9092,OUTSIDE://103.116.45.174:9092
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    depends_on:
      - zookeeper

  etcd:
    image: quay.io/coreos/etcd
    ports:
      - 2379:2379
      - 2380:2380
    container_name: etcd
    volumes:
      - /etc/timezone:/etc/timezone
      - /etc/localtime:/etc/localtime
    environment:
      ETCDCTL_API: 3
    restart: always
    command: /usr/local/bin/etcd --name etcd0 --data-dir /etcd-data --listen-client-urls http://0.0.0.0:2379 --advertise-client-urls http://0.0.0.0:2379 --listen-peer-urls http://0.0.0.0:2380 --initial-advertise-peer-urls http://0.0.0.0:2380 --initial-cluster etcd0=http://0.0.0.0:2380 --initial-cluster-token tkn --initial-cluster-state new

  minio:
    image: minio/minio
    ports:
      - 10005:9000
      - 9090:9090
    container_name: minio
    volumes:
      - /mnt/data:/data
      - /mnt/config:/root/.minio
    environment:
      MINIO_ROOT_USER: ${USER}
      MINIO_ROOT_PASSWORD: ${PASSWORD}
    restart: always
    command: minio server /data --console-address ':9090'


