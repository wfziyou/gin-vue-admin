basePath: /
definitions:
  apply.Apply:
    properties:
      applyAddress:
        description: 访问地址
        type: string
      applyParameters:
        description: 访问参数
        type: string
      circleId:
        description: 圈子_编号
        type: integer
      createdAt:
        description: 创建时间
        type: string
      icon:
        description: 图标
        type: string
      id:
        description: 主键ID
        type: integer
      miniProgramId:
        description: 类型(0小程序、1第三方链接)
        type: integer
      name:
        description: 名称
        type: string
      owerType:
        description: 拥有者：0平台、1圈子、2个人
        type: integer
      sort:
        description: 排序
        type: integer
      type:
        type: integer
      userId:
        description: 用户_编号
        type: integer
    type: object
  apply.CircleApply:
    properties:
      applyGroupId:
        description: 应用分组_编号
        type: integer
      applyId:
        description: 应用_编号
        type: integer
      applyParameters:
        description: 访问参数
        type: string
      circleId:
        description: 圈子_编号
        type: integer
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      showName:
        description: 名称别名
        type: string
      sort:
        description: 排序
        type: integer
    type: object
  apply.CircleApplyGroup:
    properties:
      circleId:
        description: 圈子_编号
        type: integer
      createdAt:
        description: 创建时间
        type: string
      icon:
        description: 图标
        type: string
      id:
        description: 主键ID
        type: integer
      name:
        description: 名称
        type: string
      parentId:
        description: 父节点编号
        type: integer
      sort:
        description: 排序
        type: integer
    type: object
  common.UserBaseInfo:
    properties:
      birthday:
        description: 生日
        type: string
      email:
        description: 用户邮箱
        type: string
      headerImg:
        description: 用户头像
        type: string
      id:
        description: 主键ID
        type: integer
      nickName:
        description: 用户昵称
        type: string
      phone:
        description: 用户手机号
        type: string
      sex:
        description: 性别 1男 2女 3未知
        type: integer
    type: object
  community.Circle:
    properties:
      backImage:
        description: 圈子背景图;size:500
        type: string
      circleClassifyId:
        description: 圈子分类_编号
        type: integer
      createdAt:
        description: 创建时间
        type: string
      des:
        description: 圈子简介;size:1000
        type: string
      id:
        description: 主键ID
        type: integer
      logo:
        description: 圈子Logo
        type: string
      name:
        description: 圈子名称
        type: string
      newUserFocus:
        description: 新注册用户默认关注：0 否，1是
        type: integer
      noLimitUserGroup:
        description: 不受限用户组(json数组);size:500
        type: string
      pay:
        description: 付费：0否、1是;size:10
        type: integer
      powerAdd:
        description: 圈子加入权限：0 所有人，1指定用户组，2指定部门和成员，3仅邀请的用户
        type: integer
      powerAddUser:
        description: 圈子加入权限_指定部门和成员(json数组);size:500
        type: string
      powerComment:
        description: 圈子内评论权限：0 所有人，1版块用户，2版主，3指定用户组
        type: integer
      powerCommentUser:
        description: 圈子内评论权限_指定部门和用户(json数组);size:500
        type: string
      powerPublish:
        description: 圈子内发布权限：0 所有人，1版块用户，2版主，3指定用户组
        type: integer
      powerPublishUser:
        description: 圈子内发布权限_指定部门和用户(json数组);size:500
        type: string
      powerView:
        description: 圈子内浏览权限：0 所有人，1版块用户，2版主，3指定用户组
        type: integer
      powerViewUser:
        description: 圈子内浏览权限_指定部门和用户(json数组);size:500
        type: string
      process:
        description: 是否开启版块内容人工审核：0 否，1是
        type: integer
      property:
        description: :圈子属性： 0公开（自由加入），1公开（审核加入），2私密（邀请加入）
        type: integer
      protocol:
        description: 圈子规约;size:1000
        type: string
      slogan:
        description: 圈子标语;size:20
        type: string
      sort:
        description: 排序
        type: integer
      supportCategory:
        description: 支持内容类别(json数组)：1视频、2动态、3资讯、4公告、5文章、6问答、7建议;size:500;
        type: string
      type:
        description: 类型：0官方圈子、1用户圈子、2小区
        type: integer
      view:
        description: 板块可见性： 0不在社区中显示，不能被搜索到，1不在社区中显示，可以被搜索到，2在社区中显示，可以被搜索到
        type: integer
    type: object
  community.CircleBaseInfo:
    properties:
      circleClassifyId:
        description: 圈子分类_编号
        type: integer
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      logo:
        description: 圈子Logo
        type: string
      name:
        description: 圈子名称
        type: string
      pay:
        description: 付费：0否、1是;size:10
        type: integer
      process:
        description: 是否开启版块内容人工审核：0 否，1是
        type: integer
      property:
        description: :圈子属性： 0公开（自由加入），1公开（审核加入），2私密（邀请加入）
        type: integer
      sort:
        description: 排序
        type: integer
      type:
        description: 类型：0官方圈子、1用户圈子、2小区
        type: integer
    type: object
  community.CircleClassify:
    properties:
      createdAt:
        description: 创建时间
        type: string
      des:
        description: 描述
        type: string
      id:
        description: 主键ID
        type: integer
      name:
        description: 名称
        type: string
      property:
        description: 属性：0公开 ，1受限
        type: integer
      sort:
        description: 排序
        type: integer
    type: object
  community.CircleRequest:
    properties:
      backImage:
        description: 圈子背景图
        type: string
      checkStatus:
        description: 审核状态：0 未处理 1 通过，2驳回
        type: integer
      circleClassifyId:
        description: 圈子分类_编号
        type: integer
      createdAt:
        description: 创建时间
        type: string
      des:
        description: 圈子简介
        type: string
      id:
        description: 主键ID
        type: integer
      logo:
        description: 圈子Logo
        type: string
      name:
        description: 圈子名称
        type: string
      protocol:
        description: 圈子规约
        type: string
      slogan:
        description: 圈子标语
        type: string
      type:
        description: 类型：0官方圈子 ，1用户圈子
        type: integer
    type: object
  community.CircleUserInfo:
    properties:
      circleId:
        description: 圈子_编号
        type: integer
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      sort:
        description: 用户的圈子排序
        type: integer
      userBaseInfo:
        $ref: '#/definitions/community.User'
        description: 用户基本信息
      userId:
        description: 用户ID
        type: integer
    type: object
  community.CommentThumbsUp:
    properties:
      commentId:
        description: 评论编号
        type: integer
      userId:
        description: "用户id \t//点赞时间"
        type: integer
    type: object
  community.ForumComment:
    properties:
      checkStatus:
        description: 审核状态(0未审批 1通过 2拒绝)
        type: integer
      checkTime:
        description: 审核时间
        type: string
      checkUser:
        description: 审核人
        type: integer
      commentContent:
        description: 评论内容
        type: string
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      likeNum:
        description: 点赞数
        type: integer
      parentId:
        description: 父评论编号
        type: integer
      postsId:
        description: 帖子编号
        type: integer
      thumbsUp:
        description: 是否点赞：0否、1是
        type: integer
      userId:
        description: 评论者
        type: integer
      userInfo:
        $ref: '#/definitions/community.ForumPostsUser'
        description: 用户基本信息
    type: object
  community.ForumPosts:
    properties:
      anonymity:
        description: 匿名发布：0否、1是
        type: integer
      attachment:
        description: 附件
        type: string
      category:
        description: 类别：1视频、2动态、3资讯、4公告、5文章、6问答、7建议
        type: integer
      checkStatus:
        description: 审核状态：1草稿、2未审批、3通过、4拒绝
        type: integer
      checkTime:
        description: 审核时间
        type: string
      checkUser:
        description: 审核人
        type: integer
      circleId:
        description: 圈子_编号
        type: integer
      circleInfo:
        $ref: '#/definitions/community.CircleBaseInfo'
        description: 圈子基本信息
      collect:
        description: 是否收藏：0否、1是
        type: integer
      collectNum:
        description: 收藏次数
        type: integer
      commentId:
        description: 问答最佳答案ID
        type: integer
      commentNum:
        description: 评论次数
        type: integer
      contentHtml:
        description: html内容
        type: string
      contentMarkdown:
        description: markdown内容
        type: string
      contentType:
        description: 内容类型：1markdown、2html
        type: integer
      coverImage:
        description: 封面
        type: string
      createdAt:
        description: 创建时间
        type: string
      groupId:
        description: 帖子分类编号
        type: integer
      id:
        description: 主键ID
        type: integer
      likeNum:
        description: 点赞次数
        type: integer
      marrow:
        description: 精华：0否、1是
        type: integer
      pay:
        description: 付费：0否、1是
        type: integer
      payAttachment:
        description: 附件付费：0否、1是
        type: integer
      payContent:
        description: 内容付费：0否、1是
        type: integer
      payContentLook:
        description: 内容付费可查看百分比例
        type: integer
      payCurrency:
        description: 付费货币：1人民、2积分、3代币
        type: integer
      payNum:
        description: 付费金额
        type: integer
      powerComment:
        description: 评论权限：0关闭、1开启
        type: integer
      powerCommentAnonymity:
        description: 匿名评论：0关闭、1开启
        type: integer
      readNum:
        description: 阅读次数
        type: integer
      seoIntroduce:
        description: 简介(SEO简介)
        type: string
      seoKey:
        description: SEO关键词
        type: string
      shareNum:
        description: 分享次数
        type: integer
      source:
        description: 来源
        type: string
      tag:
        description: 标签
        type: string
      thumbsUp:
        description: 是否点赞：0否、1是
        type: integer
      title:
        description: 标题
        type: string
      top:
        description: 置顶：0否、1是
        type: integer
      topicInfo:
        items:
          $ref: '#/definitions/community.ForumTopicBaseInfo'
        type: array
      userId:
        description: 发布者编号
        type: integer
      userInfo:
        $ref: '#/definitions/community.ForumPostsUser'
        description: 用户基本信息
      video:
        description: 视频地址
        type: string
    type: object
  community.ForumPostsBaseInfo:
    properties:
      anonymity:
        description: 匿名发布：0否、1是
        type: integer
      attachment:
        description: 附件
        type: string
      category:
        description: 类别：1视频、2动态、3资讯、4公告、5文章、6问答、7建议
        type: integer
      circleId:
        description: 圈子_编号
        type: integer
      circleInfo:
        $ref: '#/definitions/community.CircleBaseInfo'
        description: 圈子基本信息
      collect:
        description: 是否收藏：0否、1是
        type: integer
      collectNum:
        description: 收藏次数
        type: integer
      commentNum:
        description: 评论次数
        type: integer
      coverImage:
        description: 封面
        type: string
      createdAt:
        description: 创建时间
        type: string
      groupId:
        description: 帖子分类编号
        type: integer
      id:
        description: 主键ID
        type: integer
      likeNum:
        description: 点赞次数
        type: integer
      marrow:
        description: 精华：0否、1是
        type: integer
      readNum:
        description: 阅读次数
        type: integer
      shareNum:
        description: 分享次数
        type: integer
      source:
        description: 来源
        type: string
      tag:
        description: 标签
        type: string
      thumbsUp:
        description: 是否点赞：0否、1是
        type: integer
      title:
        description: 标题
        type: string
      top:
        description: 置顶：0否、1是
        type: integer
      topicInfo:
        items:
          $ref: '#/definitions/community.ForumTopicBaseInfo'
        type: array
      userId:
        description: 发布者编号
        type: integer
      userInfo:
        $ref: '#/definitions/community.ForumPostsUser'
        description: 用户基本信息
      video:
        description: 视频地址
        type: string
    type: object
  community.ForumPostsUser:
    properties:
      account:
        description: 账号
        type: string
      headerImg:
        description: 头像
        type: string
      id:
        description: 主键ID
        type: integer
      nickName:
        description: 昵称
        type: string
      realName:
        description: 真名
        type: string
      sex:
        description: 性别 1男 2女 3未知
        type: integer
      userType:
        description: 用户平台
        type: integer
    type: object
  community.ForumTopic:
    properties:
      attentionNum:
        description: 关注数
        type: integer
      circleId:
        description: 圈子_编号
        type: integer
      coverImage:
        description: 封面
        type: string
      createdAt:
        description: 创建时间
        type: string
      discussNum:
        description: 讨论数
        type: integer
      hot:
        description: 是否热门：0 否 1 是
        type: integer
      id:
        description: 主键ID
        type: integer
      name:
        description: 名称
        type: string
      reviewStatus:
        description: 审核状态：0 未处理 1 通过，2驳回
        type: integer
      topicGroupId:
        description: 分组id
        type: integer
      type:
        description: 话题类型：0 全局，1圈子
        type: integer
    type: object
  community.ForumTopicBaseInfo:
    properties:
      id:
        description: 主键ID
        type: integer
      name:
        description: 名称
        type: string
    type: object
  community.ForumTopicGroup:
    properties:
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      name:
        description: 名称
        type: string
      sort:
        description: 排序
        type: integer
    type: object
  community.Report:
    properties:
      circleId:
        description: 圈子_编号
        type: integer
      content:
        description: 举报内容
        type: string
      contentAttachment:
        description: 内容附件
        type: string
      createdAt:
        description: 创建时间
        type: string
      curStatus:
        description: 处理状态：0 未处理、1 处理中、2 拒绝、3 完成
        type: integer
      durationId:
        description: 禁言时长_编号
        type: integer
      handleScore:
        description: 积分处理:0不扣分、1扣分
        type: integer
      handleType:
        description: 处理方式:0无效处理（不予处理）、账号禁言
        type: integer
      handleUserId:
        description: 操作用户_编号
        type: integer
      id:
        description: 主键ID
        type: integer
      reasonId:
        description: 举报原因_编号
        type: integer
      reportType:
        description: 举报类型:0用户举报、1评论举报、2内容举报-帖子、3内容举报-视频、4内容举报-动态、5内容举报-话题
        type: integer
      reportUserId:
        description: 被举报用户编号
        type: integer
      scoreBuy:
        description: 购物积分
        type: integer
      scoreCommunity:
        description: 社区积分
        type: integer
      scoreDownload:
        description: 下载值
        type: integer
      scoreExperience:
        description: 经验
        type: integer
      unlock:
        description: 是否解除：0 否、是
        type: integer
      userId:
        description: 举报用户编号
        type: integer
    type: object
  community.ReportReason:
    properties:
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      reason:
        description: 举报理由
        type: string
      sort:
        description: 排序
        type: integer
    type: object
  community.User:
    properties:
      account:
        description: 账号
        type: string
      authorities:
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      authority:
        $ref: '#/definitions/system.SysAuthority'
        description: 用户角色
      birthday:
        description: 生日
        type: string
      createdAt:
        description: 创建时间
        type: string
      email:
        description: 邮箱
        type: string
      headerImg:
        description: 头像
        type: string
      id:
        description: 主键ID
        type: integer
      nickName:
        description: 昵称
        type: string
      password:
        description: 密码
        type: string
      phone:
        description: 手机
        type: string
      realName:
        description: 真名
        type: string
      roleId:
        description: 用户角色ID
        type: integer
      sex:
        description: 性别 1男 2女 3未知
        type: integer
      userExtend:
        $ref: '#/definitions/community.UserExtend'
        description: 用户扩展
      userType:
        description: 用户平台
        type: integer
      uuid:
        description: 用户编号
        type: string
    type: object
  community.UserCircleApplyBaseInfo:
    properties:
      applyId:
        description: 应用_编号
        type: integer
      sort:
        description: 排序
        type: integer
    type: object
  community.UserExtend:
    properties:
      blog:
        description: 博客
        type: string
      circleId:
        description: 当前圈子编号
        type: integer
      circleName:
        description: 当前圈子名称
        type: string
      createdAt:
        description: 创建时间
        type: string
      github:
        description: github
        type: string
      id:
        description: 主键ID
        type: integer
      numCircle:
        description: 圈子数
        type: integer
      numFan:
        description: 粉丝数
        type: integer
      numFocus:
        description: 关注数
        type: integer
      qq:
        description: qq
        type: string
      weibo:
        description: 微博
        type: string
      weixin:
        description: 微信
        type: string
    type: object
  config.AliyunOSS:
    properties:
      access-key-id:
        type: string
      access-key-secret:
        type: string
      base-path:
        type: string
      bucket-name:
        type: string
      bucket-url:
        type: string
      endpoint:
        type: string
    type: object
  config.AliyunSms:
    properties:
      accessKeyId:
        description: 短信的AccessKey ID
        type: string
      accessSecret:
        description: 短信的AccessKey Secret
        type: string
      signName:
        description: 短信的 SignName
        type: string
      smsTemplate:
        $ref: '#/definitions/config.SmsTemplate'
        description: 短信模板
    type: object
  config.Autocode:
    properties:
      root:
        type: string
      server:
        type: string
      server-api:
        type: string
      server-initialize:
        type: string
      server-model:
        type: string
      server-plug:
        type: string
      server-request:
        type: string
      server-router:
        type: string
      server-service:
        type: string
      transfer-restart:
        type: boolean
      web:
        type: string
      web-api:
        type: string
      web-form:
        type: string
      web-table:
        type: string
    type: object
  config.AwsS3:
    properties:
      base-url:
        type: string
      bucket:
        type: string
      disable-ssl:
        type: boolean
      endpoint:
        type: string
      path-prefix:
        type: string
      region:
        type: string
      s3-force-path-style:
        type: boolean
      secret-id:
        type: string
      secret-key:
        type: string
    type: object
  config.CORS:
    properties:
      mode:
        type: string
      whitelist:
        items:
          $ref: '#/definitions/config.CORSWhitelist'
        type: array
    type: object
  config.CORSWhitelist:
    properties:
      allow-credentials:
        type: boolean
      allow-headers:
        type: string
      allow-methods:
        type: string
      allow-origin:
        type: string
      expose-headers:
        type: string
    type: object
  config.CacheCaptcha:
    properties:
      expires-time:
        description: 缓存过期时间
        type: string
      sms-time:
        description: 短信有效时间
        type: string
    type: object
  config.Captcha:
    properties:
      img-height:
        description: 验证码高度
        type: integer
      img-width:
        description: 验证码宽度
        type: integer
      key-long:
        description: 验证码长度
        type: integer
      open-captcha:
        description: 防爆破验证码开启此数，0代表每次登录都需要验证码，其他数字代表错误密码此数，如3代表错误三次后出现验证码
        type: integer
      open-captcha-timeout:
        description: 防爆破验证码超时时间，单位：s(秒)
        type: integer
    type: object
  config.Detail:
    properties:
      compareField:
        description: 需要比较时间的字段
        type: string
      interval:
        description: 时间间隔
        type: string
      tableName:
        description: 需要清理的表名
        type: string
    type: object
  config.Email:
    properties:
      from:
        description: 收件人
        type: string
      host:
        description: 服务器地址
        type: string
      is-ssl:
        description: 是否SSL
        type: boolean
      nickname:
        description: 昵称
        type: string
      port:
        description: 端口
        type: integer
      secret:
        description: 密钥
        type: string
      to:
        description: 收件人:多个以英文逗号分隔
        type: string
    type: object
  config.Excel:
    properties:
      dir:
        type: string
    type: object
  config.HuaWeiObs:
    properties:
      access-key:
        type: string
      bucket:
        type: string
      endpoint:
        type: string
      path:
        type: string
      secret-key:
        type: string
    type: object
  config.JWT:
    properties:
      buffer-time:
        description: 缓冲时间
        type: string
      expires-time:
        description: 过期时间
        type: string
      issuer:
        description: 签发者
        type: string
      signing-key:
        description: jwt签名
        type: string
    type: object
  config.Local:
    properties:
      path:
        description: 本地文件访问路径
        type: string
      store-path:
        description: 本地文件存储路径
        type: string
    type: object
  config.Mssql:
    properties:
      config:
        description: 高级配置
        type: string
      db-name:
        description: 数据库名
        type: string
      engine:
        default: InnoDB
        description: 数据库引擎，默认InnoDB
        type: string
      log-mode:
        description: 是否开启Gorm全局日志
        type: string
      log-zap:
        description: 是否通过zap写入日志文件
        type: boolean
      max-idle-conns:
        description: 空闲中的最大连接数
        type: integer
      max-open-conns:
        description: 打开到数据库的最大连接数
        type: integer
      password:
        description: 数据库密码
        type: string
      path:
        description: 服务器地址:端口
        type: string
      port:
        description: :端口
        type: string
      prefix:
        description: 全局表前缀，单独定义TableName则不生效
        type: string
      singular:
        description: 是否开启全局禁用复数，true表示开启
        type: boolean
      username:
        description: 数据库用户名
        type: string
    type: object
  config.Mysql:
    properties:
      config:
        description: 高级配置
        type: string
      db-name:
        description: 数据库名
        type: string
      engine:
        default: InnoDB
        description: 数据库引擎，默认InnoDB
        type: string
      log-mode:
        description: 是否开启Gorm全局日志
        type: string
      log-zap:
        description: 是否通过zap写入日志文件
        type: boolean
      max-idle-conns:
        description: 空闲中的最大连接数
        type: integer
      max-open-conns:
        description: 打开到数据库的最大连接数
        type: integer
      password:
        description: 数据库密码
        type: string
      path:
        description: 服务器地址:端口
        type: string
      port:
        description: :端口
        type: string
      prefix:
        description: 全局表前缀，单独定义TableName则不生效
        type: string
      singular:
        description: 是否开启全局禁用复数，true表示开启
        type: boolean
      username:
        description: 数据库用户名
        type: string
    type: object
  config.Oracle:
    properties:
      config:
        description: 高级配置
        type: string
      db-name:
        description: 数据库名
        type: string
      engine:
        default: InnoDB
        description: 数据库引擎，默认InnoDB
        type: string
      log-mode:
        description: 是否开启Gorm全局日志
        type: string
      log-zap:
        description: 是否通过zap写入日志文件
        type: boolean
      max-idle-conns:
        description: 空闲中的最大连接数
        type: integer
      max-open-conns:
        description: 打开到数据库的最大连接数
        type: integer
      password:
        description: 数据库密码
        type: string
      path:
        description: 服务器地址:端口
        type: string
      port:
        description: :端口
        type: string
      prefix:
        description: 全局表前缀，单独定义TableName则不生效
        type: string
      singular:
        description: 是否开启全局禁用复数，true表示开启
        type: boolean
      username:
        description: 数据库用户名
        type: string
    type: object
  config.Pgsql:
    properties:
      config:
        description: 高级配置
        type: string
      db-name:
        description: 数据库名
        type: string
      engine:
        default: InnoDB
        description: 数据库引擎，默认InnoDB
        type: string
      log-mode:
        description: 是否开启Gorm全局日志
        type: string
      log-zap:
        description: 是否通过zap写入日志文件
        type: boolean
      max-idle-conns:
        description: 空闲中的最大连接数
        type: integer
      max-open-conns:
        description: 打开到数据库的最大连接数
        type: integer
      password:
        description: 数据库密码
        type: string
      path:
        description: 服务器地址:端口
        type: string
      port:
        description: :端口
        type: string
      prefix:
        description: 全局表前缀，单独定义TableName则不生效
        type: string
      singular:
        description: 是否开启全局禁用复数，true表示开启
        type: boolean
      username:
        description: 数据库用户名
        type: string
    type: object
  config.Qiniu:
    properties:
      access-key:
        description: 秘钥AK
        type: string
      bucket:
        description: 空间名称
        type: string
      img-path:
        description: CDN加速域名
        type: string
      secret-key:
        description: 秘钥SK
        type: string
      use-cdn-domains:
        description: 上传是否使用CDN上传加速
        type: boolean
      use-https:
        description: 是否使用https
        type: boolean
      zone:
        description: 存储区域
        type: string
    type: object
  config.Redis:
    properties:
      addr:
        description: 服务器地址:端口
        type: string
      db:
        description: redis的哪个数据库
        type: integer
      password:
        description: 密码
        type: string
    type: object
  config.Server:
    properties:
      aliyun-oss:
        $ref: '#/definitions/config.AliyunOSS'
      aliyun-sms:
        $ref: '#/definitions/config.AliyunSms'
        description: sms
      autocode:
        $ref: '#/definitions/config.Autocode'
        description: auto
      aws-s3:
        $ref: '#/definitions/config.AwsS3'
      cache-captcha:
        $ref: '#/definitions/config.CacheCaptcha'
        description: cacheCaptcha
      captcha:
        $ref: '#/definitions/config.Captcha'
      cors:
        $ref: '#/definitions/config.CORS'
        description: 跨域配置
      db-list:
        items:
          $ref: '#/definitions/config.SpecializedDB'
        type: array
      email:
        $ref: '#/definitions/config.Email'
      excel:
        $ref: '#/definitions/config.Excel'
      hua-wei-obs:
        $ref: '#/definitions/config.HuaWeiObs'
      jwt:
        $ref: '#/definitions/config.JWT'
      local:
        $ref: '#/definitions/config.Local'
        description: oss
      mssql:
        $ref: '#/definitions/config.Mssql'
      mysql:
        $ref: '#/definitions/config.Mysql'
        description: gorm
      oracle:
        $ref: '#/definitions/config.Oracle'
      pgsql:
        $ref: '#/definitions/config.Pgsql'
      qiniu:
        $ref: '#/definitions/config.Qiniu'
      redis:
        $ref: '#/definitions/config.Redis'
      system:
        $ref: '#/definitions/config.System'
      tencent-cos:
        $ref: '#/definitions/config.TencentCOS'
      timer:
        $ref: '#/definitions/config.Timer'
      yunxin-im:
        $ref: '#/definitions/config.YunXinIm'
        description: im
      zap:
        $ref: '#/definitions/config.Zap'
    type: object
  config.SmsTemplate:
    properties:
      bindBank:
        description: 绑定银行
        type: string
      bindTel:
        description: 绑定电话
        type: string
      changePwd:
        description: 修改密码
        type: string
      register:
        description: 注册
        type: string
      resetPwd:
        description: 重置密码
        type: string
      test:
        description: 测试
        type: string
    type: object
  config.SpecializedDB:
    properties:
      alias-name:
        type: string
      config:
        description: 高级配置
        type: string
      db-name:
        description: 数据库名
        type: string
      disable:
        type: boolean
      engine:
        default: InnoDB
        description: 数据库引擎，默认InnoDB
        type: string
      log-mode:
        description: 是否开启Gorm全局日志
        type: string
      log-zap:
        description: 是否通过zap写入日志文件
        type: boolean
      max-idle-conns:
        description: 空闲中的最大连接数
        type: integer
      max-open-conns:
        description: 打开到数据库的最大连接数
        type: integer
      password:
        description: 数据库密码
        type: string
      path:
        description: 服务器地址:端口
        type: string
      port:
        description: :端口
        type: string
      prefix:
        description: 全局表前缀，单独定义TableName则不生效
        type: string
      singular:
        description: 是否开启全局禁用复数，true表示开启
        type: boolean
      type:
        type: string
      username:
        description: 数据库用户名
        type: string
    type: object
  config.System:
    properties:
      addr:
        description: 端口值
        type: integer
      db-type:
        description: 数据库类型:mysql(默认)|sqlite|sqlserver|postgresql
        type: string
      env:
        description: 环境值
        type: string
      iplimit-count:
        type: integer
      iplimit-time:
        type: integer
      oss-type:
        description: Oss类型
        type: string
      router-prefix:
        type: string
      use-multipoint:
        description: 多点登录拦截
        type: boolean
      use-redis:
        description: 使用redis
        type: boolean
    type: object
  config.TencentCOS:
    properties:
      base-url:
        type: string
      bucket:
        type: string
      path-prefix:
        type: string
      region:
        type: string
      secret-id:
        type: string
      secret-key:
        type: string
    type: object
  config.Timer:
    properties:
      detail:
        items:
          $ref: '#/definitions/config.Detail'
        type: array
      spec:
        description: CRON表达式
        type: string
      start:
        description: 是否启用
        type: boolean
      with_seconds:
        description: 是否精确到秒
        type: boolean
    type: object
  config.YunXinIm:
    properties:
      appKey:
        description: 云信IM AppKey
        type: string
      url:
        description: 云信IM 地址
        type: string
    type: object
  config.Zap:
    properties:
      director:
        description: 日志文件夹
        type: string
      encode-level:
        description: 编码级
        type: string
      format:
        description: 输出
        type: string
      level:
        description: 级别
        type: string
      log-in-console:
        description: 输出控制台
        type: boolean
      max-age:
        description: 日志留存时间
        type: integer
      prefix:
        description: 日志前缀
        type: string
      show-line:
        description: 显示行
        type: boolean
      stacktrace-key:
        description: 栈名
        type: string
    type: object
  example.ExaCustomer:
    properties:
      createDept:
        type: integer
      createUser:
        type: integer
      createdAt:
        description: 创建时间
        type: string
      customerName:
        description: 客户名
        type: string
      customerPhoneData:
        description: 客户手机号
        type: string
      id:
        description: 主键ID
        type: integer
      status:
        type: integer
      sysUser:
        $ref: '#/definitions/system.SysUser'
        description: 管理详情
      sysUserAuthorityID:
        description: 管理角色ID
        type: integer
      sysUserId:
        description: 管理ID
        type: integer
      updateUser:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  example.ExaFile:
    properties:
      chunkTotal:
        type: integer
      createDept:
        type: integer
      createUser:
        type: integer
      createdAt:
        description: 创建时间
        type: string
      exaFileChunk:
        items:
          $ref: '#/definitions/example.ExaFileChunk'
        type: array
      fileMd5:
        type: string
      fileName:
        type: string
      filePath:
        type: string
      id:
        description: 主键ID
        type: integer
      isFinish:
        type: boolean
      status:
        type: integer
      updateUser:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  example.ExaFileChunk:
    properties:
      createDept:
        type: integer
      createUser:
        type: integer
      createdAt:
        description: 创建时间
        type: string
      exaFileID:
        type: integer
      fileChunkNumber:
        type: integer
      fileChunkPath:
        type: string
      id:
        description: 主键ID
        type: integer
      status:
        type: integer
      updateUser:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  example.ExaFileUploadAndDownload:
    properties:
      createDept:
        type: integer
      createUser:
        type: integer
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      key:
        description: 编号
        type: string
      name:
        description: 文件名
        type: string
      status:
        type: integer
      tag:
        description: 文件标签
        type: string
      updateUser:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      url:
        description: 文件地址
        type: string
    type: object
  general.BugReport:
    properties:
      actualResult:
        description: 实际结果
        type: string
      actualResultAttachment:
        description: 实际结果附件
        type: string
      checkStatus:
        description: 处理状态：0 未处理、1 处理中、2 拒绝、3 完成
        type: integer
      content:
        description: 操作步骤
        type: string
      contentAttachment:
        description: 操作步骤附件
        type: string
      createdAt:
        description: 创建时间
        type: string
      expectedResult:
        description: 预期结果
        type: string
      id:
        description: 主键ID
        type: integer
      otherInfo:
        description: 其他信息
        type: string
      title:
        description: 标题
        type: string
      userId:
        description: 用户编号
        type: integer
    type: object
  general.Protocol:
    properties:
      content:
        description: 协议内容
        type: string
      createdAt:
        description: 创建时间
        type: string
      des:
        description: 协议说明
        type: string
      id:
        description: 主键ID
        type: integer
      module:
        description: 所属模块/插件
        type: string
      name:
        description: 协议名称
        type: string
      pos:
        description: 显示位置
        type: string
    type: object
  general.UserBrowsingHistory:
    properties:
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      postsId:
        description: 帖子编号
        type: integer
      time:
        description: 浏览时间
        type: string
      userId:
        description: 用户编号
        type: integer
    type: object
  general.UserCollect:
    properties:
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      postsId:
        description: 帖子编号
        type: integer
      userId:
        description: 用户编号
        type: integer
    type: object
  github.com_flipped-aurora_gin-vue-admin_server_model_app_community_request.Register:
    properties:
      account:
        description: 用户名
        example: 用户名
        type: string
      nickName:
        description: 昵称
        example: 昵称
        type: string
      passWord:
        description: 密码
        example: 密码
        type: string
    type: object
  github.com_flipped-aurora_gin-vue-admin_server_model_app_community_response.LoginResponse:
    properties:
      expiresAt:
        type: integer
      token:
        type: string
      user:
        $ref: '#/definitions/community.User'
    type: object
  github.com_flipped-aurora_gin-vue-admin_server_model_app_community_response.SysUserResponse:
    properties:
      user:
        $ref: '#/definitions/community.User'
    type: object
  github.com_flipped-aurora_gin-vue-admin_server_model_system_request.Register:
    properties:
      authorityId:
        example: uint64 角色id
        type: string
      authorityIds:
        example: '[]uint64 角色id'
        type: string
      email:
        example: 电子邮箱
        type: string
      enable:
        example: int 是否启用
        type: string
      headerImg:
        example: 头像链接
        type: string
      nickName:
        example: 昵称
        type: string
      passWord:
        example: 密码
        type: string
      phone:
        example: 电话号码
        type: string
      userName:
        example: 用户名
        type: string
    type: object
  github.com_flipped-aurora_gin-vue-admin_server_model_system_response.LoginResponse:
    properties:
      expiresAt:
        type: integer
      token:
        type: string
      user:
        $ref: '#/definitions/system.SysUser'
    type: object
  github.com_flipped-aurora_gin-vue-admin_server_model_system_response.SysUserResponse:
    properties:
      user:
        $ref: '#/definitions/system.SysUser'
    type: object
  request.AddMenuAuthorityInfo:
    properties:
      authorityId:
        description: 角色ID
        type: integer
      menus:
        items:
          $ref: '#/definitions/system.SysBaseMenu'
        type: array
    type: object
  request.BindEmailReq:
    properties:
      captcha:
        description: 验证码
        type: string
      email:
        description: 邮箱
        type: string
    type: object
  request.BindTelephoneReq:
    properties:
      captcha:
        description: 验证码
        type: string
      telephone:
        description: 电话号码
        type: string
    type: object
  request.CaptchaReq:
    properties:
      telephone:
        description: 电话号码
        type: string
      type:
        description: 类型：0 测试，1注册，2修改密码，3绑定电话，4忘记密码，5绑定银行
        type: integer
    type: object
  request.CasbinInReceive:
    properties:
      authorityId:
        description: 权限id
        type: integer
      casbinInfos:
        items:
          $ref: '#/definitions/request.CasbinInfo'
        type: array
    type: object
  request.CasbinInfo:
    properties:
      method:
        description: 方法
        type: string
      path:
        description: 路径
        type: string
    type: object
  request.ChangePasswordReq:
    properties:
      newPassword:
        description: 新密码
        type: string
      password:
        description: 密码
        type: string
    type: object
  request.CreateCircleRequestReq:
    properties:
      backImage:
        description: 圈子背景图
        type: string
      circleClassifyId:
        description: 圈子分类_编号
        type: integer
      des:
        description: 圈子简介
        type: string
      logo:
        description: 圈子Logo
        type: string
      name:
        description: 圈子名称
        type: string
      protocol:
        description: 圈子规约
        type: string
      slogan:
        description: 圈子标语
        type: string
    type: object
  request.CreateForumComment:
    properties:
      commentContent:
        description: 评论内容
        type: string
      postsId:
        description: 帖子编号
        type: integer
    type: object
  request.CreateForumPostsReq:
    properties:
      anonymity:
        description: 匿名发布：0否、1是
        type: integer
      attachment:
        description: 附件
        type: string
      category:
        description: 类别：1视频、2动态、3资讯、4公告、5文章、6问答、7建议
        type: integer
      circleId:
        description: 圈子_编号
        type: integer
      contentHtml:
        description: html内容
        type: string
      contentMarkdown:
        description: markdown内容
        type: string
      contentType:
        description: 内容类型：1markdown、2html
        type: integer
      coverImage:
        description: 封面
        type: string
      title:
        description: 标题
        type: string
      topicId:
        description: 话题_编号
        type: integer
      video:
        description: 视频地址
        type: string
    type: object
  request.CreateForumTopicReq:
    properties:
      circleId:
        description: 圈子_编号
        type: integer
      coverImage:
        description: 封面
        type: string
      name:
        description: 名称
        type: string
      topicGroupId:
        description: 分组id
        type: integer
      type:
        description: 话题类型：0 全局，1圈子
        type: integer
    type: object
  request.DeleteCircleUserReq:
    properties:
      circleId:
        description: 圈子_编号
        type: integer
      userId:
        description: 用户ID
        type: integer
    type: object
  request.DeleteCommentThumbsUp:
    properties:
      commentId:
        description: 评论编号
        type: integer
    type: object
  request.DeleteForumThumbsUp:
    properties:
      postsId:
        description: 帖子编号
        type: integer
    type: object
  request.Empty:
    type: object
  request.ForumThumbsUpReq:
    properties:
      postsId:
        description: 帖子编号
        type: integer
    type: object
  request.GetAuthorityId:
    properties:
      authorityId:
        description: 角色ID
        type: integer
    type: object
  request.GetById:
    properties:
      id:
        description: 主键ID
        type: integer
    type: object
  request.IdDelete:
    properties:
      id:
        description: 编号
        type: integer
    type: object
  request.IdsReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  request.InitDB:
    properties:
      dbName:
        description: 数据库名
        type: string
      dbType:
        description: 数据库类型
        type: string
      host:
        description: 服务器地址
        type: string
      password:
        description: 数据库密码
        type: string
      port:
        description: 数据库连接端口
        type: string
      userName:
        description: 数据库用户名
        type: string
    required:
    - dbName
    - userName
    type: object
  request.Login:
    properties:
      captcha:
        description: 验证码
        type: string
      captchaId:
        description: 验证码ID
        type: string
      password:
        description: 密码
        type: string
      username:
        description: 用户名
        type: string
    type: object
  request.LoginPwd:
    properties:
      account:
        description: 用户名
        type: string
      password:
        description: 密码
        type: string
    type: object
  request.LoginTelephone:
    properties:
      captcha:
        description: 验证码
        type: string
      telephone:
        description: 电话号码
        type: string
    type: object
  request.LoginThird:
    type: object
  request.PageInfo:
    properties:
      keyword:
        description: 关键字
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
    type: object
  request.ResetPasswordReq:
    properties:
      captcha:
        description: 验证码
        type: string
      password:
        description: 密码
        type: string
    type: object
  request.RollBack:
    properties:
      deleteTable:
        description: 是否删除表
        type: boolean
      id:
        description: 主键ID
        type: integer
    type: object
  request.SearchApiParams:
    properties:
      apiGroup:
        description: api组
        type: integer
      createDept:
        type: integer
      createUser:
        type: integer
      createdAt:
        description: 创建时间
        type: string
      desc:
        description: 排序方式:升序false(默认)|降序true
        type: boolean
      description:
        description: api中文描述
        type: string
      id:
        description: 主键ID
        type: integer
      keyword:
        description: 关键字
        type: string
      method:
        description: 方法:创建POST(默认)|查看GET|更新PUT|删除DELETE
        type: string
      orderKey:
        description: 排序
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      path:
        description: api路径
        type: string
      status:
        type: integer
      sysApiGroup:
        $ref: '#/definitions/system.SysApiGroup'
      updateUser:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  request.SetSelfBaseInfoReq:
    properties:
      birthday:
        description: 生日
        type: string
      headerImg:
        description: 用户头像
        type: string
      id:
        description: 主键ID
        type: integer
      nickName:
        description: 用户昵称
        type: string
      sex:
        description: 性别 1男 2女 3未知
        type: integer
    type: object
  request.SetUserAuth:
    properties:
      authorityId:
        description: 角色ID
        type: integer
    type: object
  request.SetUserAuthorities:
    properties:
      authorityIds:
        description: 角色ID
        items:
          type: integer
        type: array
      id:
        type: integer
    type: object
  request.SetUserCurCircleReq:
    properties:
      circleId:
        description: 圈子_编号
        type: integer
    type: object
  request.SysAuthorityBtnReq:
    properties:
      authorityId:
        type: integer
      menuID:
        type: integer
      selected:
        items:
          type: integer
        type: array
    type: object
  request.SysAutoHistory:
    properties:
      keyword:
        description: 关键字
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
    type: object
  request.UpdateCircleReq:
    properties:
      backImage:
        description: 圈子背景图;size:500
        type: string
      des:
        description: 圈子简介;size:1000
        type: string
      id:
        description: 圈子编号
        type: integer
      logo:
        description: 圈子Logo
        type: string
      name:
        description: 圈子名称
        type: string
      newUserFocus:
        description: 新注册用户默认关注：0 否，1是
        type: integer
      noLimitUserGroup:
        description: 不受限用户组(json数组);size:500
        type: string
      powerAdd:
        description: 圈子加入权限：0 所有人，1指定用户组，2指定部门和成员，3仅邀请的用户
        type: integer
      powerAddUser:
        description: 圈子加入权限_指定部门和成员(json数组);size:500
        type: string
      powerComment:
        description: 圈子内评论权限：0 所有人，1版块用户，2版主，3指定用户组
        type: integer
      powerCommentUser:
        description: 圈子内评论权限_指定部门和用户(json数组);size:500
        type: string
      powerPublish:
        description: 圈子内发布权限：0 所有人，1版块用户，2版主，3指定用户组
        type: integer
      powerPublishUser:
        description: 圈子内发布权限_指定部门和用户(json数组);size:500
        type: string
      powerView:
        description: 圈子内浏览权限：0 所有人，1版块用户，2版主，3指定用户组
        type: integer
      powerViewUser:
        description: 圈子内浏览权限_指定部门和用户(json数组);size:500
        type: string
      process:
        description: 是否开启版块内容人工审核：0 否，1是
        type: integer
      property:
        description: :圈子属性： 0公开（自由加入），1公开（审核加入），2私密（邀请加入）
        type: integer
      protocol:
        description: 圈子规约;size:1000
        type: string
      slogan:
        description: 圈子标语;size:20
        type: string
      view:
        description: 板块可见性： 0不在社区中显示，不能被搜索到，1不在社区中显示，可以被搜索到，2在社区中显示，可以被搜索到
        type: integer
    type: object
  request.UpdateCircleUserReq:
    properties:
      circleId:
        description: 圈子_编号
        type: integer
      userId:
        description: 用户ID
        type: integer
    type: object
  request.UserCircleApplySearch:
    properties:
      circleId:
        description: 圈子_编号
        type: integer
    type: object
  request.UserCircleApplyUpdate:
    properties:
      apply:
        description: 应用列表
        items:
          $ref: '#/definitions/community.UserCircleApplyBaseInfo'
        type: array
      circleId:
        description: 圈子_编号
        type: integer
    type: object
  request.UserCollectReq:
    properties:
      postsId:
        description: 帖子编号
        type: integer
    type: object
  response.DataResult:
    type: object
  response.Email:
    properties:
      body:
        description: 邮件内容
        type: string
      subject:
        description: 邮件标题
        type: string
      to:
        description: 邮件发送给谁
        type: string
    type: object
  response.ExaCustomerResponse:
    properties:
      customer:
        $ref: '#/definitions/example.ExaCustomer'
    type: object
  response.ExaFileResponse:
    properties:
      file:
        $ref: '#/definitions/example.ExaFileUploadAndDownload'
    type: object
  response.FilePathResponse:
    properties:
      filePath:
        type: string
    type: object
  response.FileResponse:
    properties:
      file:
        $ref: '#/definitions/example.ExaFile'
    type: object
  response.PageResult:
    properties:
      list:
        type: object
      page:
        type: integer
      pageSize:
        type: integer
      total:
        type: integer
    type: object
  response.PolicyPathResponse:
    properties:
      paths:
        items:
          $ref: '#/definitions/request.CasbinInfo'
        type: array
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data:
        type: object
      msg:
        type: string
    type: object
  response.SysAPIListResponse:
    properties:
      apis:
        items:
          $ref: '#/definitions/system.SysApi'
        type: array
    type: object
  response.SysAPIResponse:
    properties:
      api:
        $ref: '#/definitions/system.SysApi'
    type: object
  response.SysAuthorityBtnRes:
    properties:
      selected:
        items:
          type: integer
        type: array
    type: object
  response.SysAuthorityCopyResponse:
    properties:
      authority:
        $ref: '#/definitions/system.SysAuthority'
      oldAuthorityId:
        description: 旧角色ID
        type: integer
    type: object
  response.SysAuthorityResponse:
    properties:
      authority:
        $ref: '#/definitions/system.SysAuthority'
    type: object
  response.SysBaseMenuResponse:
    properties:
      menu:
        $ref: '#/definitions/system.SysBaseMenu'
    type: object
  response.SysBaseMenusResponse:
    properties:
      menus:
        items:
          $ref: '#/definitions/system.SysBaseMenu'
        type: array
    type: object
  response.SysCaptchaResponse:
    properties:
      captchaId:
        type: string
      captchaLength:
        type: integer
      openCaptcha:
        type: boolean
      picPath:
        type: string
    type: object
  response.SysConfigResponse:
    properties:
      config:
        $ref: '#/definitions/config.Server'
    type: object
  response.SysMenusResponse:
    properties:
      menus:
        items:
          $ref: '#/definitions/system.SysMenu'
        type: array
    type: object
  system.AutoCodeStruct:
    properties:
      abbreviation:
        description: Struct简称
        type: string
      autoCreateApiToSql:
        description: 是否自动创建api
        type: boolean
      autoCreateResource:
        description: 是否自动创建资源标识
        type: boolean
      autoMoveFile:
        description: 是否自动移动文件
        type: boolean
      businessDB:
        description: 业务数据库
        type: string
      description:
        description: Struct中文名称
        type: string
      fields:
        items:
          $ref: '#/definitions/system.Field'
        type: array
      hasTimer:
        type: boolean
      humpPackageName:
        description: go文件名称
        type: string
      package:
        type: string
      packageName:
        description: 文件名称
        type: string
      structName:
        description: Struct名称
        type: string
      tableName:
        description: 表名
        type: string
    type: object
  system.Field:
    properties:
      clearable:
        description: 是否可清空
        type: boolean
      columnName:
        description: 数据库字段
        type: string
      comment:
        description: 数据库字段描述
        type: string
      dataTypeLong:
        description: 数据库字段长度
        type: string
      dictType:
        description: 字典
        type: string
      errorText:
        description: 校验失败文字
        type: string
      fieldDesc:
        description: 中文名
        type: string
      fieldJson:
        description: FieldJson
        type: string
      fieldName:
        description: Field名
        type: string
      fieldSearchType:
        description: 搜索条件
        type: string
      fieldType:
        description: Field数据类型
        type: string
      require:
        description: 是否必填
        type: boolean
      sort:
        description: 是否增加排序
        type: boolean
    type: object
  system.SysApi:
    properties:
      apiGroup:
        description: api组
        type: integer
      createDept:
        type: integer
      createUser:
        type: integer
      createdAt:
        description: 创建时间
        type: string
      description:
        description: api中文描述
        type: string
      id:
        description: 主键ID
        type: integer
      method:
        description: 方法:创建POST(默认)|查看GET|更新PUT|删除DELETE
        type: string
      path:
        description: api路径
        type: string
      status:
        type: integer
      sysApiGroup:
        $ref: '#/definitions/system.SysApiGroup'
      updateUser:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.SysApiGroup:
    properties:
      authorityId:
        description: 角色ID
        type: integer
      createdAt:
        description: 创建时间
        type: string
      deletedAt:
        type: string
      description:
        description: 描述
        type: string
      name:
        description: 名称
        type: string
      sort:
        description: 排序
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.SysAuthority:
    properties:
      authorityId:
        description: 角色ID
        type: integer
      authorityName:
        description: 角色名
        type: string
      children:
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      createdAt:
        description: 创建时间
        type: string
      dataAuthorityId:
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      defaultRouter:
        description: 默认菜单(默认dashboard)
        type: string
      deletedAt:
        type: string
      menus:
        items:
          $ref: '#/definitions/system.SysBaseMenu'
        type: array
      parentId:
        description: 父角色ID
        type: integer
      sort:
        description: 排序
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.SysAutoCode:
    properties:
      createDept:
        type: integer
      createUser:
        type: integer
      createdAt:
        description: 创建时间
        type: string
      desc:
        type: string
      id:
        description: 主键ID
        type: integer
      label:
        type: string
      packageName:
        type: string
      status:
        type: integer
      updateUser:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.SysBaseMenu:
    properties:
      activeName:
        type: string
      authoritys:
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      children:
        items:
          $ref: '#/definitions/system.SysBaseMenu'
        type: array
      closeTab:
        description: 自动关闭tab
        type: boolean
      component:
        description: 对应前端文件路径
        type: string
      createDept:
        type: integer
      createUser:
        type: integer
      createdAt:
        description: 创建时间
        type: string
      defaultMenu:
        description: 是否是基础路由（开发中）
        type: boolean
      hidden:
        description: 是否在列表隐藏
        type: boolean
      icon:
        description: 菜单图标
        type: string
      id:
        description: 主键ID
        type: integer
      keepAlive:
        description: 是否缓存
        type: boolean
      menuBtn:
        items:
          $ref: '#/definitions/system.SysBaseMenuBtn'
        type: array
      name:
        description: 路由name
        type: string
      parameters:
        items:
          $ref: '#/definitions/system.SysBaseMenuParameter'
        type: array
      parentId:
        description: 父菜单ID
        type: string
      path:
        description: 路由path
        type: string
      sort:
        description: 排序标记
        type: integer
      status:
        type: integer
      title:
        description: 菜单名
        type: string
      updateUser:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.SysBaseMenuBtn:
    properties:
      createDept:
        type: integer
      createUser:
        type: integer
      createdAt:
        description: 创建时间
        type: string
      desc:
        type: string
      id:
        description: 主键ID
        type: integer
      name:
        type: string
      status:
        type: integer
      sysBaseMenuID:
        type: integer
      updateUser:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.SysBaseMenuParameter:
    properties:
      createDept:
        type: integer
      createUser:
        type: integer
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      key:
        description: 地址栏携带参数的key
        type: string
      status:
        type: integer
      sysBaseMenuID:
        type: integer
      type:
        description: 地址栏携带参数为params还是query
        type: string
      updateUser:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      value:
        description: 地址栏携带参数的值
        type: string
    type: object
  system.SysDictionary:
    properties:
      createDept:
        type: integer
      createUser:
        type: integer
      createdAt:
        description: 创建时间
        type: string
      desc:
        description: 描述
        type: string
      id:
        description: 主键ID
        type: integer
      name:
        description: 字典名（中）
        type: string
      status:
        description: 状态
        type: boolean
      sysDictionaryDetails:
        items:
          $ref: '#/definitions/system.SysDictionaryDetail'
        type: array
      type:
        description: 字典名（英）
        type: string
      updateUser:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.SysDictionaryDetail:
    properties:
      createDept:
        type: integer
      createUser:
        type: integer
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      label:
        description: 展示值
        type: string
      sort:
        description: 排序标记
        type: integer
      status:
        description: 启用状态
        type: boolean
      sysDictionaryID:
        description: 关联标记
        type: integer
      updateUser:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      value:
        description: 字典值
        type: integer
    type: object
  system.SysMenu:
    properties:
      activeName:
        type: string
      authoritys:
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      btns:
        additionalProperties:
          type: integer
        type: object
      children:
        items:
          $ref: '#/definitions/system.SysMenu'
        type: array
      closeTab:
        description: 自动关闭tab
        type: boolean
      component:
        description: 对应前端文件路径
        type: string
      createDept:
        type: integer
      createUser:
        type: integer
      createdAt:
        description: 创建时间
        type: string
      defaultMenu:
        description: 是否是基础路由（开发中）
        type: boolean
      hidden:
        description: 是否在列表隐藏
        type: boolean
      icon:
        description: 菜单图标
        type: string
      id:
        description: 主键ID
        type: integer
      keepAlive:
        description: 是否缓存
        type: boolean
      menuBtn:
        items:
          $ref: '#/definitions/system.SysBaseMenuBtn'
        type: array
      menuId:
        type: string
      name:
        description: 路由name
        type: string
      parameters:
        items:
          $ref: '#/definitions/system.SysBaseMenuParameter'
        type: array
      parentId:
        description: 父菜单ID
        type: string
      path:
        description: 路由path
        type: string
      sort:
        description: 排序标记
        type: integer
      status:
        type: integer
      title:
        description: 菜单名
        type: string
      updateUser:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.SysOperationRecord:
    properties:
      agent:
        description: 代理
        type: string
      body:
        description: 请求Body
        type: string
      createDept:
        type: integer
      createUser:
        type: integer
      createdAt:
        description: 创建时间
        type: string
      error_message:
        description: 错误信息
        type: string
      id:
        description: 主键ID
        type: integer
      ip:
        description: 请求ip
        type: string
      latency:
        description: 延迟
        type: string
      method:
        description: 请求方法
        type: string
      path:
        description: 请求路径
        type: string
      resp:
        description: 响应Body
        type: string
      status:
        description: 请求状态
        type: integer
      updateUser:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      user:
        $ref: '#/definitions/system.SysUser'
      user_id:
        description: 用户id
        type: integer
    type: object
  system.SysUser:
    properties:
      activeColor:
        description: 活跃颜色
        type: string
      authorities:
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      authority:
        $ref: '#/definitions/system.SysAuthority'
      authorityId:
        description: 用户角色ID
        type: integer
      baseColor:
        description: 基础颜色
        type: string
      createDept:
        type: integer
      createUser:
        type: integer
      createdAt:
        description: 创建时间
        type: string
      email:
        description: 用户邮箱
        type: string
      enable:
        description: 用户是否被冻结 1正常 2冻结
        type: integer
      headerImg:
        description: 用户头像
        type: string
      id:
        description: 主键ID
        type: integer
      nickName:
        description: 用户昵称
        type: string
      phone:
        description: 用户手机号
        type: string
      sideMode:
        description: 用户侧边主题
        type: string
      status:
        type: integer
      updateUser:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      userName:
        description: 用户登录名
        type: string
      uuid:
        description: 用户UUID
        type: string
    type: object
  system.System:
    properties:
      config:
        $ref: '#/definitions/config.Server'
    type: object
info:
  contact: {}
  description: This is a sample Server pets
  title: Swagger Example API
  version: 0.0.1
paths:
  /aliSms/sendAliSms:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"发送成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 发送（阿里）短信
      tags:
      - System
  /api/createApi:
    post:
      consumes:
      - application/json
      parameters:
      - description: api路径, api中文描述, api组, 方法
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysApi'
      produces:
      - application/json
      responses:
        "200":
          description: 创建基础api
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 创建基础api
      tags:
      - SysApi
  /api/deleteApi:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysApi'
      produces:
      - application/json
      responses:
        "200":
          description: 删除api
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除api
      tags:
      - SysApi
  /api/deleteApisByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: 删除选中Api
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除选中Api
      tags:
      - SysApi
  /api/getAllApis:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 获取所有的Api 不分页,返回包括api列表
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysAPIListResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取所有的Api 不分页
      tags:
      - SysApi
  /api/getApiById:
    post:
      consumes:
      - application/json
      parameters:
      - description: 根据id获取api
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: 根据id获取api,返回包括api详情
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysAPIResponse'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 根据id获取api
      tags:
      - SysApi
  /api/getApiList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 分页获取API列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SearchApiParams'
      produces:
      - application/json
      responses:
        "200":
          description: 分页获取API列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取API列表
      tags:
      - SysApi
  /api/updateApi:
    post:
      consumes:
      - application/json
      parameters:
      - description: api路径, api中文描述, api组, 方法
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysApi'
      produces:
      - application/json
      responses:
        "200":
          description: 修改基础api
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 修改基础api
      tags:
      - SysApi
  /app/circle/createCircleRequest:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建CircleRequest
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.CreateCircleRequestReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建CircleRequest
      tags:
      - App_Circle
  /app/circle/deleteCircleUser:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除CircleUser
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.DeleteCircleUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除CircleUser
      tags:
      - App_Circle
  /app/circle/deleteCircleUserByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除CircleUser
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 批量删除CircleUser
      tags:
      - App_Circle
  /app/circle/findCircle:
    get:
      consumes:
      - application/json
      parameters:
      - description: 编号
        in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回community.Circle
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/community.Circle'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用id查询Circle
      tags:
      - App_Circle
  /app/circle/findCircleRequest:
    get:
      consumes:
      - application/json
      parameters:
      - description: 编号
        in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回community.CircleUser
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/community.CircleRequest'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用id查询CircleRequest
      tags:
      - App_Circle
  /app/circle/findCircleUser:
    get:
      consumes:
      - application/json
      parameters:
      - description: 编号
        in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回community.CircleUserInfo
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/community.CircleUserInfo'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用id查询CircleUserInfo
      tags:
      - App_Circle
  /app/circle/getCircleClassifyList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 描述
        in: query
        name: des
        type: string
      - description: 创建时间（结束）
        in: query
        name: endCreatedAt
        type: string
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 名称
        in: query
        name: name
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - description: 创建时间（开始）
        in: query
        name: startCreatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回community.CircleClassify
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                List:
                  items:
                    $ref: '#/definitions/community.CircleClassify'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取CircleClassify列表
      tags:
      - App_Circle
  /app/circle/getCircleClassifyListAll:
    get:
      consumes:
      - application/json
      parameters:
      - description: 描述
        in: query
        name: des
        type: string
      - description: 创建时间（结束）
        in: query
        name: endCreatedAt
        type: string
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 名称
        in: query
        name: name
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - description: 创建时间（开始）
        in: query
        name: startCreatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回community.CircleClassify
          schema:
            allOf:
            - $ref: '#/definitions/response.DataResult'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/community.CircleClassify'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取CircleClassify列表
      tags:
      - App_Circle
  /app/circle/getCircleForumPostsList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 类别：1视频、2动态、3资讯、4公告、5文章、6问答、7建议
        in: query
        name: category
        type: integer
      - description: 圈子_编号
        in: query
        name: circleId
        type: integer
      - description: 创建时间（结束）
        in: query
        name: endCreatedAt
        type: string
      - description: 帖子分类编号
        in: query
        name: groupId
        type: integer
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 精华：0否、1是
        in: query
        name: marrow
        type: integer
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - description: 创建时间（开始）
        in: query
        name: startCreatedAt
        type: string
      - description: 标题
        in: query
        name: title
        type: string
      - description: 置顶：0否、1是
        in: query
        name: top
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回community.ForumPostsBaseInfo
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                List:
                  items:
                    $ref: '#/definitions/community.ForumPostsBaseInfo'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取圈子ForumPosts列表
      tags:
      - App_Circle
  /app/circle/getCircleList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间（结束）
        in: query
        name: endCreatedAt
        type: string
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 搜索名字：圈子名称或圈子简介
        in: query
        name: name
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - description: 创建时间（开始）
        in: query
        name: startCreatedAt
        type: string
      - description: 类型：0官方圈子、1用户圈子、2小区
        in: query
        name: type
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回community.CircleBaseInfo
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                List:
                  items:
                    $ref: '#/definitions/community.CircleBaseInfo'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取Circle列表
      tags:
      - App_Circle
  /app/circle/getCircleRequestList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 审核状态：0 未处理 1 通过，2驳回
        in: query
        name: checkStatus
        type: integer
      - description: 圈子分类_编号
        in: query
        name: circleClassifyId
        type: integer
      - description: 圈子简介
        in: query
        name: des
        type: string
      - description: 创建时间（结束）
        in: query
        name: endCreatedAt
        type: string
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 圈子名称
        in: query
        name: name
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - description: 圈子标语
        in: query
        name: slogan
        type: string
      - description: 创建时间（开始）
        in: query
        name: startCreatedAt
        type: string
      - description: 类型：0官方圈子 ，1用户圈子
        in: query
        name: type
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回community.CircleRequest
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                List:
                  items:
                    $ref: '#/definitions/community.CircleRequest'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取CircleRequest列表
      tags:
      - App_Circle
  /app/circle/getCircleUserList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 圈子_编号
        in: query
        name: circleId
        type: integer
      - description: 创建时间（结束）
        in: query
        name: endCreatedAt
        type: string
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - description: 创建时间（开始）
        in: query
        name: startCreatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回community.CircleUserInfo
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                List:
                  items:
                    $ref: '#/definitions/community.CircleUserInfo'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取CircleUserInfo列表
      tags:
      - App_Circle
  /app/circle/getSelfCircleList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间（结束）
        in: query
        name: endCreatedAt
        type: string
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 搜索名字：圈子名称或圈子简介
        in: query
        name: name
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - description: 创建时间（开始）
        in: query
        name: startCreatedAt
        type: string
      - description: 类型：0官方圈子、1用户圈子、2小区
        in: query
        name: type
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回community.CircleBaseInfo
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                List:
                  items:
                    $ref: '#/definitions/community.CircleBaseInfo'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取用户加入的Circle列表
      tags:
      - App_Circle
  /app/circle/getUserCircleForumPostsList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 类别：1视频、2动态、3资讯、4公告、5文章、6问答、7建议
        in: query
        name: category
        type: integer
      - description: 创建时间（结束）
        in: query
        name: endCreatedAt
        type: string
      - description: 帖子分类编号
        in: query
        name: groupId
        type: integer
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 精华：0否、1是
        in: query
        name: marrow
        type: integer
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - description: 创建时间（开始）
        in: query
        name: startCreatedAt
        type: string
      - description: 标题
        in: query
        name: title
        type: string
      - description: 置顶：0否、1是
        in: query
        name: top
        type: integer
      - description: 用户ID
        in: query
        name: userId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回community.ForumPostsBaseInfo
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                List:
                  items:
                    $ref: '#/definitions/community.ForumPostsBaseInfo'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用户加入圈子的所有动态列表
      tags:
      - App_Circle
  /app/circle/setUserCurCircle:
    post:
      consumes:
      - application/json
      parameters:
      - description: 设置用户当前圈子
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SetUserCurCircleReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"设置成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 设置用户当前圈子
      tags:
      - App_Circle
  /app/circle/updateCircle:
    put:
      consumes:
      - application/json
      parameters:
      - description: (圈子管理者)更新Circle
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UpdateCircleReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: (圈子管理者)更新Circle
      tags:
      - App_Circle
  /app/circle/updateCircleUser:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新CircleUser
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UpdateCircleUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新CircleUser
      tags:
      - App_Circle
  /app/circleApply/findApply:
    get:
      consumes:
      - application/json
      parameters:
      - description: 编号
        in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回apply.Apply
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/apply.Apply'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用id查询Apply
      tags:
      - App_CircleApply
  /app/circleApply/findCircleApply:
    get:
      consumes:
      - application/json
      parameters:
      - description: 编号
        in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回apply.CircleApply
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/apply.CircleApply'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用id查询CircleApply
      tags:
      - App_CircleApply
  /app/circleApply/getApplyList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 圈子_编号
        in: query
        name: circleId
        type: integer
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 名称
        in: query
        name: name
        type: string
      - description: 拥有者：0平台、1圈子、2个人
        in: query
        name: owerType
        type: integer
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - description: 用户_编号
        in: query
        name: userId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回apply.Apply
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                List:
                  items:
                    $ref: '#/definitions/apply.Apply'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取Apply列表
      tags:
      - App_CircleApply
  /app/circleApply/getApplyListAll:
    get:
      consumes:
      - application/json
      parameters:
      - description: 圈子_编号
        in: query
        name: circleId
        type: integer
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 名称
        in: query
        name: name
        type: string
      - description: 拥有者：0平台、1圈子、2个人
        in: query
        name: owerType
        type: integer
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - description: 用户_编号
        in: query
        name: userId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回apply.Apply
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                List:
                  items:
                    $ref: '#/definitions/apply.Apply'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取Apply列表
      tags:
      - App_CircleApply
  /app/circleApply/getCircleApplyGroupList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 圈子_编号
        in: query
        name: circleId
        type: integer
      - description: 创建时间（结束）
        in: query
        name: endCreatedAt
        type: string
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 名称
        in: query
        name: name
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - description: 父节点编号
        in: query
        name: parentId
        type: integer
      - description: 创建时间（开始）
        in: query
        name: startCreatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回apply.CircleApplyGroup
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                List:
                  items:
                    $ref: '#/definitions/apply.CircleApplyGroup'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取CircleApplyGroup列表
      tags:
      - App_CircleApply
  /app/circleApply/getCircleApplyGroupListAll:
    get:
      consumes:
      - application/json
      parameters:
      - description: 圈子_编号
        in: query
        name: circleId
        type: integer
      - description: 创建时间（结束）
        in: query
        name: endCreatedAt
        type: string
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 名称
        in: query
        name: name
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - description: 父节点编号
        in: query
        name: parentId
        type: integer
      - description: 创建时间（开始）
        in: query
        name: startCreatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回apply.CircleApplyGroup
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                List:
                  items:
                    $ref: '#/definitions/apply.CircleApplyGroup'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取CircleApplyGroup列表
      tags:
      - App_CircleApply
  /app/circleApply/getCircleApplyList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 应用分组_编号
        in: query
        name: applyGroupId
        type: integer
      - description: 圈子_编号
        in: query
        name: circleId
        type: integer
      - description: 创建时间（结束）
        in: query
        name: endCreatedAt
        type: string
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - description: 名称别名
        in: query
        name: showName
        type: string
      - description: 创建时间（开始）
        in: query
        name: startCreatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回apply.CircleApply
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                List:
                  items:
                    $ref: '#/definitions/apply.CircleApply'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取CircleApply列表
      tags:
      - App_CircleApply
  /app/circleApply/getCircleApplyListAll:
    get:
      consumes:
      - application/json
      parameters:
      - description: 应用分组_编号
        in: query
        name: applyGroupId
        type: integer
      - description: 圈子_编号
        in: query
        name: circleId
        type: integer
      - description: 创建时间（结束）
        in: query
        name: endCreatedAt
        type: string
      - description: 名称别名
        in: query
        name: showName
        type: string
      - description: 创建时间（开始）
        in: query
        name: startCreatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回apply.CircleApply
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                List:
                  items:
                    $ref: '#/definitions/apply.CircleApply'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取CircleApply列表
      tags:
      - App_CircleApply
  /app/circleApply/getUserCircleApplyListALL:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 返回communityReq.UserCircleApplySearch
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                List:
                  items:
                    $ref: '#/definitions/request.UserCircleApplySearch'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取UserCircleApply列表
      tags:
      - App_CircleApply
  /app/circleApply/setUserCircleApply:
    post:
      consumes:
      - application/json
      parameters:
      - description: 设置UserCircleApply
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UserCircleApplyUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 设置UserCircleApply
      tags:
      - App_CircleApply
  /app/fileUploadAndDownload/breakpointContinue:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: an example for breakpoint resume, 断点续传示例
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 断点续传到服务器
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 断点续传到服务器
      tags:
      - App_FileUploadAndDownload
  /app/fileUploadAndDownload/deleteFile:
    post:
      parameters:
      - description: 传入文件里面id即可
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/example.ExaFileUploadAndDownload'
      produces:
      - application/json
      responses:
        "200":
          description: 删除文件
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除文件
      tags:
      - App_FileUploadAndDownload
  /app/fileUploadAndDownload/findFile:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 上传文件完成
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 创建文件,返回包括文件路径
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.FilePathResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 创建文件
      tags:
      - App_FileUploadAndDownload
  /app/fileUploadAndDownload/getFileList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: 分页文件列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页文件列表
      tags:
      - App_FileUploadAndDownload
  /app/fileUploadAndDownload/removeChunk:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 删除缓存切片
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 删除切片
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除切片
      tags:
      - App_FileUploadAndDownload
  /app/fileUploadAndDownload/upload:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 上传文件示例
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 上传文件示例,返回包括文件详情
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/example.ExaFileUploadAndDownload'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 上传文件示例
      tags:
      - App_FileUploadAndDownload
  /app/forumPosts/createCommentThumbsUp:
    post:
      consumes:
      - application/json
      parameters:
      - description: 评论点赞
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/community.CommentThumbsUp'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 评论点赞
      tags:
      - App_ForumPosts
  /app/forumPosts/createForumComment:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建ForumComment
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.CreateForumComment'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建ForumComment
      tags:
      - App_ForumPosts
  /app/forumPosts/createForumPosts:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建ForumPosts
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.CreateForumPostsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建ForumPosts
      tags:
      - App_ForumPosts
  /app/forumPosts/createForumThumbsUp:
    post:
      consumes:
      - application/json
      parameters:
      - description: 帖子点赞
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ForumThumbsUpReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 帖子点赞
      tags:
      - App_ForumPosts
  /app/forumPosts/deleteCommentThumbsUp:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 取消评论点赞
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.DeleteCommentThumbsUp'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 取消评论点赞
      tags:
      - App_ForumPosts
  /app/forumPosts/deleteForumComment:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除ForumComment
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdDelete'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除ForumComment
      tags:
      - App_ForumPosts
  /app/forumPosts/deleteForumCommentByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除ForumComment
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 批量删除ForumComment
      tags:
      - App_ForumPosts
  /app/forumPosts/deleteForumPosts:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除ForumPosts
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdDelete'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除ForumPosts
      tags:
      - App_ForumPosts
  /app/forumPosts/deleteForumPostsByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除ForumPosts
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 批量删除ForumPosts
      tags:
      - App_ForumPosts
  /app/forumPosts/deleteForumThumbsUp:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 取消帖子点赞
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.DeleteForumThumbsUp'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 取消帖子点赞
      tags:
      - App_ForumPosts
  /app/forumPosts/deleteSelfForumPosts:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除自己的ForumPosts
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdDelete'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除自己的ForumPosts
      tags:
      - App_ForumPosts
  /app/forumPosts/findForumComment:
    get:
      consumes:
      - application/json
      parameters:
      - description: 编号
        in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回community.ForumComment
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/community.ForumComment'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用id查询ForumComment
      tags:
      - App_ForumPosts
  /app/forumPosts/findForumPosts:
    get:
      consumes:
      - application/json
      parameters:
      - description: 编号
        in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回community.ForumPosts
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/community.ForumPosts'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用id查询ForumPosts
      tags:
      - App_ForumPosts
  /app/forumPosts/getForumCommentList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间（结束）
        in: query
        name: endCreatedAt
        type: string
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - description: 父评论编号
        in: query
        name: parentId
        type: integer
      - description: 帖子编号
        in: query
        name: postsId
        type: integer
      - description: 创建时间（开始）
        in: query
        name: startCreatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回community.ForumComment
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                List:
                  items:
                    $ref: '#/definitions/community.ForumComment'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取ForumComment列表
      tags:
      - App_ForumPosts
  /app/forumPosts/getForumPostsList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 类别：1视频、2动态、3资讯、4公告、5文章、6问答、7建议
        in: query
        name: category
        type: integer
      - description: 圈子_编号
        in: query
        name: circleId
        type: integer
      - description: 创建时间（结束）
        in: query
        name: endCreatedAt
        type: string
      - description: 帖子分类编号
        in: query
        name: groupId
        type: integer
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 精华：0否、1是
        in: query
        name: marrow
        type: integer
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - description: 创建时间（开始）
        in: query
        name: startCreatedAt
        type: string
      - description: 标题
        in: query
        name: title
        type: string
      - description: 置顶：0否、1是
        in: query
        name: top
        type: integer
      - description: 发布者编号
        in: query
        name: userId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回community.ForumPosts
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                List:
                  items:
                    $ref: '#/definitions/community.ForumPosts'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取ForumPosts列表
      tags:
      - App_ForumPosts
  /app/forumPosts/updateForumPosts:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新ForumPosts
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/community.ForumPosts'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新ForumPosts
      tags:
      - App_ForumPosts
  /app/general/createBugReport:
    post:
      consumes:
      - application/json
      parameters:
      - description: Bug反馈
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/general.BugReport'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Bug反馈
      tags:
      - APP_General
  /app/general/findBugReport:
    get:
      consumes:
      - application/json
      parameters:
      - description: 编号
        in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回general.BugReport
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/general.BugReport'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用id查询BugReport
      tags:
      - APP_General
  /app/general/findProtocol:
    get:
      consumes:
      - application/json
      parameters:
      - description: 编号
        in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回general.Protocol
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/general.Protocol'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用id查询协议
      tags:
      - APP_General
  /app/general/findProtocolByName:
    get:
      consumes:
      - application/json
      parameters:
      - description: 协议名称
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回general.Protocol
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/general.Protocol'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用名字查询协议
      tags:
      - APP_General
  /app/general/getBugReportList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 处理状态：0 未处理、1 处理中、2 拒绝、3 完成
        in: query
        name: checkStatus
        type: integer
      - in: query
        name: endCreatedAt
        type: string
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - in: query
        name: startCreatedAt
        type: string
      - description: 标题
        in: query
        name: title
        type: string
      - description: 用户编号
        in: query
        name: userId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回general.BugReport
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                List:
                  items:
                    $ref: '#/definitions/general.BugReport'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取BugReport列表
      tags:
      - APP_General
  /app/general/getProtocolList:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: endCreatedAt
        type: string
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 协议名称
        in: query
        name: name
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - in: query
        name: startCreatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回general.Protocol
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                List:
                  items:
                    $ref: '#/definitions/general.Protocol'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取Protocol列表
      tags:
      - APP_General
  /app/report/createReport:
    post:
      consumes:
      - application/json
      parameters:
      - description: 举报
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/community.Report'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 举报
      tags:
      - App_Report
  /app/report/findReport:
    get:
      consumes:
      - application/json
      parameters:
      - description: 编号
        in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回community.Report
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/community.Report'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用id查询Report
      tags:
      - App_Report
  /app/report/findReportReason:
    get:
      consumes:
      - application/json
      parameters:
      - description: 编号
        in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回community.ReportReason
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/community.ReportReason'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用id查询ReportReason
      tags:
      - App_Report
  /app/report/getReportList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 圈子_编号
        in: query
        name: circleId
        type: integer
      - description: 举报内容
        in: query
        name: content
        type: string
      - description: 内容附件
        in: query
        name: contentAttachment
        type: string
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - description: 处理状态：0 未处理、1 处理中、2 拒绝、3 完成
        in: query
        name: curStatus
        type: integer
      - description: 禁言时长_编号
        in: query
        name: durationId
        type: integer
      - description: 创建时间（结束）
        in: query
        name: endCreatedAt
        type: string
      - description: 积分处理:0不扣分、1扣分
        in: query
        name: handleScore
        type: integer
      - description: 处理方式:0无效处理（不予处理）、账号禁言
        in: query
        name: handleType
        type: integer
      - description: 操作用户_编号
        in: query
        name: handleUserId
        type: integer
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - description: 举报原因_编号
        in: query
        name: reasonId
        type: integer
      - description: 举报类型:0用户举报、1评论举报、2内容举报-帖子、3内容举报-视频、4内容举报-动态、5内容举报-话题
        in: query
        name: reportType
        type: integer
      - description: 被举报用户编号
        in: query
        name: reportUserId
        type: integer
      - description: 购物积分
        in: query
        name: scoreBuy
        type: integer
      - description: 社区积分
        in: query
        name: scoreCommunity
        type: integer
      - description: 下载值
        in: query
        name: scoreDownload
        type: integer
      - description: 经验
        in: query
        name: scoreExperience
        type: integer
      - description: 创建时间（开始）
        in: query
        name: startCreatedAt
        type: string
      - description: 是否解除：0 否、是
        in: query
        name: unlock
        type: integer
      - description: 举报用户编号
        in: query
        name: userId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回community.Report
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                List:
                  items:
                    $ref: '#/definitions/community.Report'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取Report列表
      tags:
      - App_Report
  /app/report/getReportReasonList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - description: 举报理由
        in: query
        name: reason
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回community.ReportReason
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                List:
                  items:
                    $ref: '#/definitions/community.ReportReason'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取ReportReason列表
      tags:
      - App_Report
  /app/topic/createForumTopic:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建ForumTopic
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.CreateForumTopicReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建ForumTopic
      tags:
      - App_Topic
  /app/topic/deleteForumTopic:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除ForumTopic
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdDelete'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除ForumTopic
      tags:
      - App_Topic
  /app/topic/deleteForumTopicByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除ForumTopic
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 批量删除ForumTopic
      tags:
      - App_Topic
  /app/topic/findForumTopic:
    get:
      consumes:
      - application/json
      parameters:
      - description: 编号
        in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回community.ForumTopic
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                List:
                  items:
                    $ref: '#/definitions/community.ForumTopic'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用id查询ForumTopic
      tags:
      - App_Topic
  /app/topic/findForumTopicGroup:
    get:
      consumes:
      - application/json
      parameters:
      - description: 编号
        in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回community.ForumTopicGroup
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/community.ForumTopicGroup'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用id查询ForumTopicGroup
      tags:
      - App_Topic
  /app/topic/getForumTopicGroupList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间（结束）
        in: query
        name: endCreatedAt
        type: string
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 名称
        in: query
        name: name
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - description: 创建时间（开始）
        in: query
        name: startCreatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回community.ForumTopicGroup
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                List:
                  items:
                    $ref: '#/definitions/community.ForumTopicGroup'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取ForumTopicGroup列表
      tags:
      - App_Topic
  /app/topic/getForumTopicGroupListAll:
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间（结束）
        in: query
        name: endCreatedAt
        type: string
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 名称
        in: query
        name: name
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - description: 创建时间（开始）
        in: query
        name: startCreatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回community.ForumTopicGroup
          schema:
            allOf:
            - $ref: '#/definitions/response.DataResult'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/community.ForumTopicGroup'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取ForumTopicGroup列表
      tags:
      - App_Topic
  /app/topic/getForumTopicList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 圈子_编号
        in: query
        name: circleId
        type: integer
      - description: 创建时间（结束）
        in: query
        name: endCreatedAt
        type: string
      - description: 是否热门：0 否 1 是
        in: query
        name: hot
        type: integer
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 名称
        in: query
        name: name
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - description: 审核状态：0 未处理 1 通过，2驳回
        in: query
        name: reviewStatus
        type: integer
      - description: 创建时间（开始）
        in: query
        name: startCreatedAt
        type: string
      - description: 分组id
        in: query
        name: topicGroupId
        type: integer
      - description: 话题类型：0 全局，1圈子
        in: query
        name: type
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回community.ForumTopic
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                List:
                  items:
                    $ref: '#/definitions/community.ForumTopic'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取ForumTopic列表
      tags:
      - App_Topic
  /app/topic/updateForumTopic:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新ForumTopic
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/community.ForumTopic'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新ForumTopic
      tags:
      - App_Topic
  /app/user/bindEmail:
    post:
      parameters:
      - description: 绑定邮箱
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.BindEmailReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"成功"}'
          schema:
            type: string
      summary: 绑定邮箱
      tags:
      - App_User
  /app/user/bindTelephone:
    post:
      parameters:
      - description: 绑定手机
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.BindTelephoneReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"成功"}'
          schema:
            type: string
      summary: 绑定手机
      tags:
      - App_User
  /app/user/getCaptcha:
    post:
      consumes:
      - application/json
      parameters:
      - description: 获取验证码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.CaptchaReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"成功"}'
          schema:
            type: string
      summary: 获取验证码
      tags:
      - App_User
  /app/user/getUserBaseInfo:
    get:
      consumes:
      - application/json
      parameters:
      - description: 编号
        in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回common.UserBaseInfo
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/common.UserBaseInfo'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用id查询UserBaseInfo
      tags:
      - App_User
  /app/user/getUserList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 账号
        in: query
        name: account
        type: string
      - in: query
        name: endCreatedAt
        type: string
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 用户昵称
        in: query
        name: nickName
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - description: 性别 1男 2女 3未知
        in: query
        name: sex
        type: integer
      - in: query
        name: startCreatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回common.User
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                List:
                  items:
                    $ref: '#/definitions/community.User'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取User列表
      tags:
      - App_User
  /app/user/loginPwd:
    post:
      parameters:
      - description: 用户登录(账号密码)
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.LoginPwd'
      produces:
      - application/json
      responses:
        "200":
          description: 返回包括用户信息,token,过期时间
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github.com_flipped-aurora_gin-vue-admin_server_model_app_community_response.LoginResponse'
                msg:
                  type: string
              type: object
      summary: 用户登录(账号密码)
      tags:
      - App_User
  /app/user/loginTelephone:
    post:
      parameters:
      - description: 用户登录(手机)
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.LoginTelephone'
      produces:
      - application/json
      responses:
        "200":
          description: 返回包括用户信息,token,过期时间
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github.com_flipped-aurora_gin-vue-admin_server_model_app_community_response.LoginResponse'
                msg:
                  type: string
              type: object
      summary: 用户登录(手机)
      tags:
      - App_User
  /app/user/loginThird:
    post:
      parameters:
      - description: 用户登录(第三方授权)
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.LoginThird'
      produces:
      - application/json
      responses:
        "200":
          description: 返回包括用户信息,token,过期时间
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github.com_flipped-aurora_gin-vue-admin_server_model_app_community_response.LoginResponse'
                msg:
                  type: string
              type: object
      summary: 用户登录(第三方授权)
      tags:
      - App_User
  /app/user/register:
    post:
      parameters:
      - description: 注册
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github.com_flipped-aurora_gin-vue-admin_server_model_app_community_request.Register'
      produces:
      - application/json
      responses:
        "200":
          description: 用户注册账号,返回包括用户信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github.com_flipped-aurora_gin-vue-admin_server_model_app_community_response.SysUserResponse'
                msg:
                  type: string
              type: object
      summary: 注册
      tags:
      - App_User
  /app/user/resetPassword:
    post:
      parameters:
      - description: 重置密码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ResetPasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"修改成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 重置密码
      tags:
      - App_User
  /app/user/setSelfBaseInfo:
    put:
      consumes:
      - application/json
      parameters:
      - description: 设置用户基础信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SetSelfBaseInfoReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 设置用户基础信息
      tags:
      - App_User
  /app/userBrowsingHistory/deleteUserBrowsingHistory:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除UserBrowsingHistory
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/general.UserBrowsingHistory'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除UserBrowsingHistory
      tags:
      - APP_UserBrowsingHistory
  /app/userBrowsingHistory/deleteUserBrowsingHistoryByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除UserBrowsingHistory
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 批量删除UserBrowsingHistory
      tags:
      - APP_UserBrowsingHistory
  /app/userBrowsingHistory/getUserBrowsingHistoryList:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: endUpdatedAt
        type: string
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - in: query
        name: startUpdatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回general.UserBrowsingHistory
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                List:
                  items:
                    $ref: '#/definitions/general.UserBrowsingHistory'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取UserBrowsingHistory列表
      tags:
      - APP_UserBrowsingHistory
  /app/userCollect/createUserCollect:
    post:
      consumes:
      - application/json
      parameters:
      - description: 收藏帖子
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UserCollectReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 收藏帖子
      tags:
      - App_UserCollect
  /app/userCollect/deleteUserCollect:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除UserCollect
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdDelete'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除UserCollect
      tags:
      - App_UserCollect
  /app/userCollect/deleteUserCollectByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除UserCollect
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 批量删除UserCollect
      tags:
      - App_UserCollect
  /app/userCollect/getUserCollectList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间（结束）
        in: query
        name: endCreatedAt
        type: string
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - description: 创建时间（开始）
        in: query
        name: startCreatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回general.UserCollect
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                List:
                  items:
                    $ref: '#/definitions/general.UserCollect'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取UserCollect列表
      tags:
      - App_UserCollect
  /authority/copyAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 旧角色id, 新权限id, 新权限名, 新父角色id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.SysAuthorityCopyResponse'
      produces:
      - application/json
      responses:
        "200":
          description: 拷贝角色,返回包括系统角色详情
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysAuthorityResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 拷贝角色
      tags:
      - Authority
  /authority/createAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 权限id, 权限名, 父角色id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: 创建角色,返回包括系统角色详情
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysAuthorityResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 创建角色
      tags:
      - Authority
  /authority/deleteAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 删除角色
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: 删除角色
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除角色
      tags:
      - Authority
  /authority/getAuthorityList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: 分页获取角色列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取角色列表
      tags:
      - Authority
  /authority/setDataAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 设置角色资源权限
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: 设置角色资源权限
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 设置角色资源权限
      tags:
      - Authority
  /authority/updateAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 权限id, 权限名, 父角色id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: 更新角色信息,返回包括系统角色详情
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysAuthorityResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 更新角色信息
      tags:
      - Authority
  /authorityBtn/canRemoveAuthorityBtn:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 设置权限按钮
      tags:
      - AuthorityBtn
  /authorityBtn/getAuthorityBtn:
    post:
      consumes:
      - application/json
      parameters:
      - description: 菜单id, 角色id, 选中的按钮id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SysAuthorityBtnReq'
      produces:
      - application/json
      responses:
        "200":
          description: 返回列表成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysAuthorityBtnRes'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取权限按钮
      tags:
      - AuthorityBtn
  /authorityBtn/setAuthorityBtn:
    post:
      consumes:
      - application/json
      parameters:
      - description: 菜单id, 角色id, 选中的按钮id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SysAuthorityBtnReq'
      produces:
      - application/json
      responses:
        "200":
          description: 返回列表成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 设置权限按钮
      tags:
      - AuthorityBtn
  /autoCode/createPackage:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建package
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAutoCode'
      produces:
      - application/json
      responses:
        "200":
          description: 创建package成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 创建package
      tags:
      - AutoCode
  /autoCode/createPlug:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: this is a test file
        in: formData
        name: plug
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 安装插件成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    type: object
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 安装插件
      tags:
      - AutoCode
  /autoCode/createTemp:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建自动代码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.AutoCodeStruct'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"创建成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 自动代码模板
      tags:
      - AutoCode
  /autoCode/delPackage:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建package
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAutoCode'
      produces:
      - application/json
      responses:
        "200":
          description: 删除package成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除package
      tags:
      - AutoCode
  /autoCode/delSysHistory:
    post:
      consumes:
      - application/json
      parameters:
      - description: 请求参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: 删除回滚记录
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除回滚记录
      tags:
      - AutoCode
  /autoCode/getColumn:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 获取当前表所有字段
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取当前表所有字段
      tags:
      - AutoCode
  /autoCode/getDatabase:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 获取当前所有数据库
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取当前所有数据库
      tags:
      - AutoCode
  /autoCode/getMeta:
    post:
      consumes:
      - application/json
      parameters:
      - description: 请求参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: 获取meta信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取meta信息
      tags:
      - AutoCode
  /autoCode/getPackage:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 创建package成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取package
      tags:
      - AutoCode
  /autoCode/getSysHistory:
    post:
      consumes:
      - application/json
      parameters:
      - description: 请求参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SysAutoHistory'
      produces:
      - application/json
      responses:
        "200":
          description: 查询回滚记录,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 查询回滚记录
      tags:
      - AutoCode
  /autoCode/getTables:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 获取当前数据库所有表
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取当前数据库所有表
      tags:
      - AutoCode
  /autoCode/preview:
    post:
      consumes:
      - application/json
      parameters:
      - description: 预览创建代码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.AutoCodeStruct'
      produces:
      - application/json
      responses:
        "200":
          description: 预览创建后的代码
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 预览创建后的代码
      tags:
      - AutoCode
  /autoCode/rollback:
    post:
      consumes:
      - application/json
      parameters:
      - description: 请求参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.RollBack'
      produces:
      - application/json
      responses:
        "200":
          description: 回滚自动生成代码
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 回滚自动生成代码
      tags:
      - AutoCode
  /base/captcha:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 生成验证码,返回包括随机数id,base64,验证码长度,是否开启验证码
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysCaptchaResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 生成验证码
      tags:
      - Base
  /base/login:
    post:
      parameters:
      - description: 用户名, 密码, 验证码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Login'
      produces:
      - application/json
      responses:
        "200":
          description: 返回包括用户信息,token,过期时间
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github.com_flipped-aurora_gin-vue-admin_server_model_system_response.LoginResponse'
                msg:
                  type: string
              type: object
      summary: 用户登录
      tags:
      - Base
  /casbin/UpdateCasbin:
    post:
      consumes:
      - application/json
      parameters:
      - description: 权限id, 权限模型列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.CasbinInReceive'
      produces:
      - application/json
      responses:
        "200":
          description: 更新角色api权限
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 更新角色api权限
      tags:
      - Casbin
  /casbin/getPolicyPathByAuthorityId:
    post:
      consumes:
      - application/json
      parameters:
      - description: 权限id, 权限模型列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.CasbinInReceive'
      produces:
      - application/json
      responses:
        "200":
          description: 获取权限列表,返回包括casbin详情列表
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PolicyPathResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取权限列表
      tags:
      - Casbin
  /customer/customer:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 客户ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/example.ExaCustomer'
      produces:
      - application/json
      responses:
        "200":
          description: 删除客户
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除客户
      tags:
      - ExaCustomer
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: createDept
        type: integer
      - in: query
        name: createUser
        type: integer
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - description: 客户名
        in: query
        name: customerName
        type: string
      - description: 客户手机号
        in: query
        name: customerPhoneData
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - in: query
        name: status
        type: integer
      - description: 管理角色ID
        in: query
        name: sysUserAuthorityID
        type: integer
      - description: 管理ID
        in: query
        name: sysUserId
        type: integer
      - in: query
        name: updateUser
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取单一客户信息,返回包括客户详情
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.ExaCustomerResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取单一客户信息
      tags:
      - ExaCustomer
    post:
      consumes:
      - application/json
      parameters:
      - description: 客户用户名, 客户手机号码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/example.ExaCustomer'
      produces:
      - application/json
      responses:
        "200":
          description: 创建客户
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 创建客户
      tags:
      - ExaCustomer
    put:
      consumes:
      - application/json
      parameters:
      - description: 客户ID, 客户信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/example.ExaCustomer'
      produces:
      - application/json
      responses:
        "200":
          description: 更新客户信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 更新客户信息
      tags:
      - ExaCustomer
  /customer/customerList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 分页获取权限客户列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取权限客户列表
      tags:
      - ExaCustomer
  /email/emailTest:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"发送成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 发送测试邮件
      tags:
      - System
  /email/sendEmail:
    post:
      parameters:
      - description: 发送邮件必须的参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.Email'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"发送成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 发送邮件
      tags:
      - System
  /fileUploadAndDownload/breakpointContinue:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: an example for breakpoint resume, 断点续传示例
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 断点续传到服务器
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 断点续传到服务器
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/deleteFile:
    post:
      parameters:
      - description: 传入文件里面id即可
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/example.ExaFileUploadAndDownload'
      produces:
      - application/json
      responses:
        "200":
          description: 删除文件
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除文件
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/findFile:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 上传文件完成
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 创建文件,返回包括文件路径
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.FilePathResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 创建文件
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/getFileList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: 分页文件列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页文件列表
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/removeChunk:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 删除缓存切片
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 删除切片
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除切片
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/upload:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 上传文件示例
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 上传文件示例,返回包括文件详情
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.ExaFileResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 上传文件示例
      tags:
      - ExaFileUploadAndDownload
  /init/checkdb:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: 初始化用户数据库
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      summary: 初始化用户数据库
      tags:
      - CheckDB
  /init/initdb:
    post:
      parameters:
      - description: 初始化数据库参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.InitDB'
      produces:
      - application/json
      responses:
        "200":
          description: 初始化用户数据库
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: 初始化用户数据库
      tags:
      - InitDB
  /jwt/jsonInBlacklist:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: jwt加入黑名单
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: jwt加入黑名单
      tags:
      - Jwt
  /menu/addBaseMenu:
    post:
      consumes:
      - application/json
      parameters:
      - description: 路由path, 父菜单ID, 路由name, 对应前端文件路径, 排序标记
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysBaseMenu'
      produces:
      - application/json
      responses:
        "200":
          description: 新增菜单
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 新增菜单
      tags:
      - Menu
  /menu/addMenuAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.AddMenuAuthorityInfo'
      produces:
      - application/json
      responses:
        "200":
          description: 增加menu和角色关联关系
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 增加menu和角色关联关系
      tags:
      - AuthorityMenu
  /menu/deleteBaseMenu:
    post:
      consumes:
      - application/json
      parameters:
      - description: 菜单id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: 删除菜单
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除菜单
      tags:
      - Menu
  /menu/getBaseMenuById:
    post:
      consumes:
      - application/json
      parameters:
      - description: 菜单id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: 根据id获取菜单,返回包括系统菜单列表
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysBaseMenuResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 根据id获取菜单
      tags:
      - Menu
  /menu/getBaseMenuTree:
    post:
      parameters:
      - description: 空
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Empty'
      produces:
      - application/json
      responses:
        "200":
          description: 获取用户动态路由,返回包括系统菜单列表
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysBaseMenusResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取用户动态路由
      tags:
      - AuthorityMenu
  /menu/getMenu:
    post:
      parameters:
      - description: 空
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Empty'
      produces:
      - application/json
      responses:
        "200":
          description: 获取用户动态路由,返回包括系统菜单详情列表
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysMenusResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取用户动态路由
      tags:
      - AuthorityMenu
  /menu/getMenuAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetAuthorityId'
      produces:
      - application/json
      responses:
        "200":
          description: 获取指定角色menu
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取指定角色menu
      tags:
      - AuthorityMenu
  /menu/getMenuList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: 分页获取基础menu列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取基础menu列表
      tags:
      - Menu
  /menu/updateBaseMenu:
    post:
      consumes:
      - application/json
      parameters:
      - description: 路由path, 父菜单ID, 路由name, 对应前端文件路径, 排序标记
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysBaseMenu'
      produces:
      - application/json
      responses:
        "200":
          description: 更新菜单
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 更新菜单
      tags:
      - Menu
  /sysDictionary/createSysDictionary:
    post:
      consumes:
      - application/json
      parameters:
      - description: SysDictionary模型
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysDictionary'
      produces:
      - application/json
      responses:
        "200":
          description: 创建SysDictionary
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 创建SysDictionary
      tags:
      - SysDictionary
  /sysDictionary/deleteSysDictionary:
    delete:
      consumes:
      - application/json
      parameters:
      - description: SysDictionary模型
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysDictionary'
      produces:
      - application/json
      responses:
        "200":
          description: 删除SysDictionary
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除SysDictionary
      tags:
      - SysDictionary
  /sysDictionary/findSysDictionary:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: createDept
        type: integer
      - in: query
        name: createUser
        type: integer
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - description: 描述
        in: query
        name: desc
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 字典名（中）
        in: query
        name: name
        type: string
      - description: 状态
        in: query
        name: status
        type: boolean
      - description: 字典名（英）
        in: query
        name: type
        type: string
      - in: query
        name: updateUser
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 用id查询SysDictionary
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用id查询SysDictionary
      tags:
      - SysDictionary
  /sysDictionary/getSysDictionaryList:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: createDept
        type: integer
      - in: query
        name: createUser
        type: integer
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - description: 描述
        in: query
        name: desc
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 字典名（中）
        in: query
        name: name
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - description: 状态
        in: query
        name: status
        type: boolean
      - description: 字典名（英）
        in: query
        name: type
        type: string
      - in: query
        name: updateUser
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 分页获取SysDictionary列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取SysDictionary列表
      tags:
      - SysDictionary
  /sysDictionary/updateSysDictionary:
    put:
      consumes:
      - application/json
      parameters:
      - description: SysDictionary模型
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysDictionary'
      produces:
      - application/json
      responses:
        "200":
          description: 更新SysDictionary
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 更新SysDictionary
      tags:
      - SysDictionary
  /sysDictionaryDetail/createSysDictionaryDetail:
    post:
      consumes:
      - application/json
      parameters:
      - description: SysDictionaryDetail模型
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysDictionaryDetail'
      produces:
      - application/json
      responses:
        "200":
          description: 创建SysDictionaryDetail
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 创建SysDictionaryDetail
      tags:
      - SysDictionaryDetail
  /sysDictionaryDetail/deleteSysDictionaryDetail:
    delete:
      consumes:
      - application/json
      parameters:
      - description: SysDictionaryDetail模型
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysDictionaryDetail'
      produces:
      - application/json
      responses:
        "200":
          description: 删除SysDictionaryDetail
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除SysDictionaryDetail
      tags:
      - SysDictionaryDetail
  /sysDictionaryDetail/findSysDictionaryDetail:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: createDept
        type: integer
      - in: query
        name: createUser
        type: integer
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 展示值
        in: query
        name: label
        type: string
      - description: 排序标记
        in: query
        name: sort
        type: integer
      - description: 启用状态
        in: query
        name: status
        type: boolean
      - description: 关联标记
        in: query
        name: sysDictionaryID
        type: integer
      - in: query
        name: updateUser
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - description: 字典值
        in: query
        name: value
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 用id查询SysDictionaryDetail
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用id查询SysDictionaryDetail
      tags:
      - SysDictionaryDetail
  /sysDictionaryDetail/getSysDictionaryDetailList:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: createDept
        type: integer
      - in: query
        name: createUser
        type: integer
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 展示值
        in: query
        name: label
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - description: 排序标记
        in: query
        name: sort
        type: integer
      - description: 启用状态
        in: query
        name: status
        type: boolean
      - description: 关联标记
        in: query
        name: sysDictionaryID
        type: integer
      - in: query
        name: updateUser
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - description: 字典值
        in: query
        name: value
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 分页获取SysDictionaryDetail列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取SysDictionaryDetail列表
      tags:
      - SysDictionaryDetail
  /sysDictionaryDetail/updateSysDictionaryDetail:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新SysDictionaryDetail
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysDictionaryDetail'
      produces:
      - application/json
      responses:
        "200":
          description: 更新SysDictionaryDetail
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 更新SysDictionaryDetail
      tags:
      - SysDictionaryDetail
  /sysOperationRecord/createSysOperationRecord:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建SysOperationRecord
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysOperationRecord'
      produces:
      - application/json
      responses:
        "200":
          description: 创建SysOperationRecord
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 创建SysOperationRecord
      tags:
      - SysOperationRecord
  /sysOperationRecord/deleteSysOperationRecord:
    delete:
      consumes:
      - application/json
      parameters:
      - description: SysOperationRecord模型
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysOperationRecord'
      produces:
      - application/json
      responses:
        "200":
          description: 删除SysOperationRecord
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除SysOperationRecord
      tags:
      - SysOperationRecord
  /sysOperationRecord/deleteSysOperationRecordByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除SysOperationRecord
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: 批量删除SysOperationRecord
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 批量删除SysOperationRecord
      tags:
      - SysOperationRecord
  /sysOperationRecord/findSysOperationRecord:
    get:
      consumes:
      - application/json
      parameters:
      - description: 代理
        in: query
        name: agent
        type: string
      - description: 请求Body
        in: query
        name: body
        type: string
      - in: query
        name: createDept
        type: integer
      - in: query
        name: createUser
        type: integer
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - description: 错误信息
        in: query
        name: error_message
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 请求ip
        in: query
        name: ip
        type: string
      - description: 延迟
        in: query
        name: latency
        type: string
      - description: 请求方法
        in: query
        name: method
        type: string
      - description: 请求路径
        in: query
        name: path
        type: string
      - description: 响应Body
        in: query
        name: resp
        type: string
      - description: 请求状态
        in: query
        name: status
        type: integer
      - in: query
        name: updateUser
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - description: 用户id
        in: query
        name: user_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 用id查询SysOperationRecord
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用id查询SysOperationRecord
      tags:
      - SysOperationRecord
  /sysOperationRecord/getSysOperationRecordList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 代理
        in: query
        name: agent
        type: string
      - description: 请求Body
        in: query
        name: body
        type: string
      - in: query
        name: createDept
        type: integer
      - in: query
        name: createUser
        type: integer
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - description: 错误信息
        in: query
        name: error_message
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 请求ip
        in: query
        name: ip
        type: string
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 延迟
        in: query
        name: latency
        type: string
      - description: 请求方法
        in: query
        name: method
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - description: 请求路径
        in: query
        name: path
        type: string
      - description: 响应Body
        in: query
        name: resp
        type: string
      - description: 请求状态
        in: query
        name: status
        type: integer
      - in: query
        name: updateUser
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - description: 用户id
        in: query
        name: user_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 分页获取SysOperationRecord列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取SysOperationRecord列表
      tags:
      - SysOperationRecord
  /system/getServerInfo:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: 获取服务器信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取服务器信息
      tags:
      - System
  /system/getSystemConfig:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: 获取配置文件内容,返回包括系统配置
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysConfigResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取配置文件内容
      tags:
      - System
  /system/reloadSystem:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: 重启系统
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 重启系统
      tags:
      - System
  /system/setSystemConfig:
    post:
      parameters:
      - description: 设置配置文件内容
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.System'
      produces:
      - application/json
      responses:
        "200":
          description: 设置配置文件内容
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 设置配置文件内容
      tags:
      - System
  /user/SetSelfInfo:
    put:
      consumes:
      - application/json
      parameters:
      - description: ID, 用户名, 昵称, 头像链接
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysUser'
      produces:
      - application/json
      responses:
        "200":
          description: 设置用户信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 设置用户信息
      tags:
      - SysUser
  /user/admin_register:
    post:
      parameters:
      - description: 用户名, 昵称, 密码, 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github.com_flipped-aurora_gin-vue-admin_server_model_system_request.Register'
      produces:
      - application/json
      responses:
        "200":
          description: 用户注册账号,返回包括用户信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/github.com_flipped-aurora_gin-vue-admin_server_model_system_response.SysUserResponse'
                msg:
                  type: string
              type: object
      summary: 用户注册账号
      tags:
      - SysUser
  /user/changePassword:
    post:
      parameters:
      - description: 用户名, 原密码, 新密码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ChangePasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: 用户修改密码
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用户修改密码
      tags:
      - SysUser
  /user/deleteUser:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 用户ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: 删除用户
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除用户
      tags:
      - SysUser
  /user/getUserInfo:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 获取用户信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取用户信息
      tags:
      - SysUser
  /user/getUserList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: 分页获取用户列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取用户列表
      tags:
      - SysUser
  /user/resetPassword:
    post:
      parameters:
      - description: ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysUser'
      produces:
      - application/json
      responses:
        "200":
          description: 重置用户密码
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 重置用户密码
      tags:
      - SysUser
  /user/setUserAuthorities:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户UUID, 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SetUserAuthorities'
      produces:
      - application/json
      responses:
        "200":
          description: 设置用户权限
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 设置用户权限
      tags:
      - SysUser
  /user/setUserAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户UUID, 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SetUserAuth'
      produces:
      - application/json
      responses:
        "200":
          description: 设置用户权限
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 更改用户权限
      tags:
      - SysUser
  /user/setUserInfo:
    put:
      consumes:
      - application/json
      parameters:
      - description: ID, 用户名, 昵称, 头像链接
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysUser'
      produces:
      - application/json
      responses:
        "200":
          description: 设置用户信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 设置用户信息
      tags:
      - SysUser
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: x-token
    type: apiKey
swagger: "2.0"
