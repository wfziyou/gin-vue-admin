# github.com/flipped-aurora/gin-vue-admin/server Global Configuration

cache-captcha:
  expires-time: 120s
  sms-time: 60s
oneLogin:
  strictcheck: 0
  appid: 300012349007
  rsaPrivateKey: |
    MIICdQIBADANBgkqhkiG9w0BAQEFAASCAl8wggJbAgEAAoGBALSsLeIkMDoN0aWx
    oqK0sENGjNEC84nfHAFykEwWdJtXN+sJxAYkMo1A8e/hljt71YRL1QkYmZtek/Vi
    8XWhKD0Fme3rih50T3+Koe6YkLBKLEjM6MEmdV0z3lOmyCxbIYORuv5giiRUFSrA
    bKFFh0vUzezmyFefAAfqA316+eDhAgMBAAECgYAIt433LTvOcUA+OFXad9FRTaQZ
    qYTKkCMvxrFDmonBvPGLu4rjqPdvbUS/CClRcWYZ3fbHW5J9tpB49G8l98KTKlTm
    bHWm2m6UBhqHxuNnhGK24muz99c1GzbXWgppxa2HeiA0yu2VT56RDfUrZGqvv+jD
    npbuRP3YInXiMirF4QJBAOd7rH2ttqw6c1HHvL+9f3cWuUAXHcTqNhsWVlU2HslD
    CJX2VDW76lF+nZLp7xeNsHb8gxBOvcfd2YYs4tyiHa0CQQDHztosmZY/JDtJUtY+
    5xMMOWegCkeblCTLtc7v8zjLu2lcn6wEuShDXfxgVg7VPCTKbTiqYy+gEg9GsNKj
    xQ6FAkAMQ3EP93QGC9KwMnS9c7ydAoct7guVsxLKvJQ2T3eyEesShspPTnVLe/m9
    Hseb59XBd/85jfJf9FDh2t7p8WzBAkAKs4Nv3BH188TRGoSq/clBYFmycpp/NKH7
    3xLkOwyRrMnp0gtufVQwt3nq1vEYbo4x4UOlrIZCdnUm/hVp/AXZAkAVhL9u6RGG
    M8TY4sDI5e9DZM/oyvM5R96uGF1Xb6LK7Znicb/P7eD1tWd0wCTI34e8iE7qxzfn
    Nz02SMfMuWaE
aliyun-sms:
  accessKeyId: LTAI9DHp7LBDXkbR
  accessSecret: mFfYI7R8lw43dFrUDX3Bnj4Nwnz0gm
  signName: 李林个人论坛
  smsTemplate:
    test: SMS_269185218
    register: SMS_269145225
    changePwd: SMS_269260229
    bindTel: SMS_269135269
    resetPwd: SMS_269245235
    bindBank: SMS_269185218
yunxin-im:
  appKey: fa7661a7cb7b9db8f47fe0e10ac8bae5
  appSecret: 54699e9dd7a0
  url: https://api.netease.im/nimserver
open-im:
  appKey: fa7661a7cb7b9db8f47fe0e10ac8bae5
  appSecret: openIM123
  url: http://192.168.3.23:10002
# jwt configuration
jwt:
  signing-key: qmPlus
  expires-time: 700d
  buffer-time: 100d
  issuer: qmPlus
# zap logger configuration
zap:
  level: info
  format: console
  prefix: "[github.com/flipped-aurora/gin-vue-admin/server]"
  director: log
  show-line: true
  encode-level: LowercaseColorLevelEncoder
  stacktrace-key: stacktrace
  log-in-console: true

# redis configuration
redis:
  db: 0
  addr: 127.0.0.1:6379
  password: ""

# email configuration
email:
  to: 470992807@qq.com
  port: 465
  from: wfziyou@163.com
  host: smtp.163.com
  is-ssl: true
  secret: UWMLBYIPGNIGDYUL
  nickname: 邻里圈子
  template:
    bindEmailSubject: 绑定邮箱
    bindEmailBody: 绑定邮箱，验证码%s
# system configuration
system:
  env: public # Change to "develop" to skip authentication for development mode
  addr: 8888
  db-type: mysql
  oss-type: aliyun-oss # 控制oss选择走本地还是 七牛等其他仓 自行增加其他oss仓可以在 server/utils/upload/upload.go 中 NewOss函数配置
  use-redis: true # 使用redis
  use-multipoint: false
  # IP限制次数 一个小时15000次
  iplimit-count: 15000
  #  IP限制一个小时
  iplimit-time: 3600
  #  路由全局前缀
  router-prefix: ""
  im-type: open-im # open-im yunxin-im
# captcha configuration
captcha:
  key-long: 6
  img-width: 240
  img-height: 80
  open-captcha: 0 # 0代表一直开启，大于0代表限制次数
  open-captcha-timeout: 3600 # open-captcha大于0时才生效

# mysql connect configuration
# 未初始化之前请勿手动修改数据库信息！！！如果一定要手动初始化请看（https://gin-vue-admin.com/docs/first_master）
mysql:
  path: 127.0.0.1
  port: "3306"
  config: charset=utf8mb4&parseTime=True&loc=Local
  db-name: bladex_boot
  username: root
  password: root
  max-idle-conns: 10
  max-open-conns: 100
  log-mode: Info
  log-zap: false
# pgsql connect configuration
# 未初始化之前请勿手动修改数据库信息！！！如果一定要手动初始化请看（https://gin-vue-admin.com/docs/first_master）
pgsql:
  path: ""
  port: ""
  config: ""
  db-name: ""
  username: ""
  password: ""
  max-idle-conns: 10
  max-open-conns: 100
  log-mode: ""
  log-zap: false
oracle:
  path: ""
  port: ""
  config: ""
  db-name: ""
  username: ""
  password: ""
  max-idle-conns: 10
  max-open-conns: 100
  log-mode: ""
  log-zap: false
mssql:
  path: ""
  port: ""
  config: ""
  db-name: ""
  username: ""
  password: ""
  prefix: ""
  singular: false
  engine: ""
  max-idle-conns: 10
  max-open-conns: 100
  log-mode: ""
  log-zap: false
db-list:
  - disable: true # 是否禁用
    type: "" # 数据库的类型,目前支持mysql、pgsql、mssql、oracle
    alias-name: "" # 数据库的名称,注意: alias-name 需要在db-list中唯一
    path: ""
    port: ""
    config: ""
    db-name: ""
    username: ""
    password: ""
    max-idle-conns: 10
    max-open-conns: 100
    log-mode: ""
    log-zap: false

# local configuration
local:
  path: uploads/file
  store-path: uploads/file

# autocode configuration
autocode:
  transfer-restart: true
  # root 自动适配项目根目录
  # 请不要手动配置,他会在项目加载的时候识别出根路径
  root: ""
  server: /server
  server-plug: /plugin/%s
  server-api: /api/v1/%s
  server-initialize: /initialize
  server-model: /model/%s
  server-request: /model/%s/request/
  server-router: /router/%s
  server-service: /service/%s
  web: /web/src
  web-api: /api
  web-form: /view
  web-table: /view

# qiniu configuration (请自行七牛申请对应的 公钥 私钥 bucket 和 域名地址)
qiniu:
  zone: ZoneHuaDong
  bucket: ""
  img-path: ""
  use-https: false
  access-key: ""
  secret-key: ""
  use-cdn-domains: false

# aliyun oss configuration
aliyun-oss:
  endpoint: oss-cn-hangzhou.aliyuncs.com
  access-key-id: LTAI9DHp7LBDXkbR
  access-key-secret: mFfYI7R8lw43dFrUDX3Bnj4Nwnz0gm
  bucket-name: hk-uploadfiles
  bucket-url: https://hk-uploadfiles.oss-cn-hangzhou.aliyuncs.com
  base-path: test

# tencent cos configuration
tencent-cos:
  bucket: xxxxx-10005608
  region: ap-shanghai
  secret-id: your-secret-id
  secret-key: your-secret-key
  base-url: https://gin.vue.admin
  path-prefix: github.com/flipped-aurora/gin-vue-admin/server

# aws s3 configuration (minio compatible)
aws-s3:
  bucket: xxxxx-10005608
  region: ap-shanghai
  endpoint: ""
  s3-force-path-style: false
  disable-ssl: false
  secret-id: your-secret-id
  secret-key: your-secret-key
  base-url: https://gin.vue.admin
  path-prefix: github.com/flipped-aurora/gin-vue-admin/server

# huawei obs configuration
hua-wei-obs:
  path: you-path
  bucket: you-bucket
  endpoint: you-endpoint
  access-key: you-access-key
  secret-key: you-secret-key

# excel configuration
excel:
  dir: ./resource/excel/

# timer task db clear table
Timer:
  start: true
  spec: "@daily" # 定时任务详细配置参考 https://pkg.go.dev/github.com/robfig/cron/v3
  detail:
    - tableName: sys_operation_records
      compareField: created_at
      interval: 2160h
    - tableName: jwt_blacklists
      compareField: created_at
      interval: 168h

# 跨域配置
# 需要配合 server/initialize/router.go -> `Router.Use(middleware.CorsByRules())` 使用
cors:
  mode: strict-whitelist # 放行模式: allow-all, 放行全部; whitelist, 白名单模式, 来自白名单内域名的请求添加 cors 头; strict-whitelist 严格白名单模式, 白名单外的请求一律拒绝
  whitelist:
    - allow-origin: example1.com
      allow-headers: Content-Type,AccessToken,X-CSRF-Token, Authorization, Token,X-Token,X-User-Id
      allow-methods: POST, GET
      expose-headers: Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type

      allow-credentials: true # 布尔值
    - allow-origin: example2.com
      allow-headers: content-type
      allow-methods: GET, POST
      expose-headers: Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type
      allow-credentials: true # 布尔值
param:
  createCircleCheck: true #创建圈子是否需要审批
  useSmsCheckCode: false #使用短信验证码
  defaultSmsCheckCode: 666666 #默认短信验证码